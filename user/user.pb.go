// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: user.proto

package user

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmptyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyData) Reset() {
	*x = EmptyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyData) ProtoMessage() {}

func (x *EmptyData) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyData.ProtoReflect.Descriptor instead.
func (*EmptyData) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{0}
}

// Stream request
type StreamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd string `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	// for validate node
	Token     string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Signature string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty"`
	RequestId int64  `protobuf:"varint,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Data      []byte `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	TraceId   string `protobuf:"bytes,7,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
}

func (x *StreamReq) Reset() {
	*x = StreamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamReq) ProtoMessage() {}

func (x *StreamReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamReq.ProtoReflect.Descriptor instead.
func (*StreamReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{1}
}

func (x *StreamReq) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *StreamReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *StreamReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *StreamReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *StreamReq) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *StreamReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *StreamReq) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

// Stream response
type StreamRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd string `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	// for validate node
	Token     string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Signature string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty"`
	RequestId int64  `protobuf:"varint,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Data      []byte `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	TraceId   string `protobuf:"bytes,7,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
}

func (x *StreamRsp) Reset() {
	*x = StreamRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRsp) ProtoMessage() {}

func (x *StreamRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRsp.ProtoReflect.Descriptor instead.
func (*StreamRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{2}
}

func (x *StreamRsp) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *StreamRsp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *StreamRsp) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *StreamRsp) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *StreamRsp) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *StreamRsp) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *StreamRsp) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

type RegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *RegisterReq) Reset() {
	*x = RegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReq) ProtoMessage() {}

func (x *RegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReq.ProtoReflect.Descriptor instead.
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *RegisterReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type RegisterRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *EmptyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RegisterRsp) Reset() {
	*x = RegisterRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRsp) ProtoMessage() {}

func (x *RegisterRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRsp.ProtoReflect.Descriptor instead.
func (*RegisterRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RegisterRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RegisterRsp) GetData() *EmptyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetPersonalSignAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *GetPersonalSignAddressReq) Reset() {
	*x = GetPersonalSignAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonalSignAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonalSignAddressReq) ProtoMessage() {}

func (x *GetPersonalSignAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonalSignAddressReq.ProtoReflect.Descriptor instead.
func (*GetPersonalSignAddressReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{5}
}

func (x *GetPersonalSignAddressReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *GetPersonalSignAddressReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type GetPersonalSignAddressRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetPersonalSignAddressRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPersonalSignAddressRsp) Reset() {
	*x = GetPersonalSignAddressRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonalSignAddressRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonalSignAddressRsp) ProtoMessage() {}

func (x *GetPersonalSignAddressRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonalSignAddressRsp.ProtoReflect.Descriptor instead.
func (*GetPersonalSignAddressRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{6}
}

func (x *GetPersonalSignAddressRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPersonalSignAddressRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetPersonalSignAddressRsp) GetData() *GetPersonalSignAddressRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetVIPInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *GetVIPInfoReq) Reset() {
	*x = GetVIPInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVIPInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVIPInfoReq) ProtoMessage() {}

func (x *GetVIPInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVIPInfoReq.ProtoReflect.Descriptor instead.
func (*GetVIPInfoReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{7}
}

func (x *GetVIPInfoReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *GetVIPInfoReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type GetVIPInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetVIPInfoRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetVIPInfoRsp) Reset() {
	*x = GetVIPInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVIPInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVIPInfoRsp) ProtoMessage() {}

func (x *GetVIPInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVIPInfoRsp.ProtoReflect.Descriptor instead.
func (*GetVIPInfoRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{8}
}

func (x *GetVIPInfoRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetVIPInfoRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetVIPInfoRsp) GetData() *GetVIPInfoRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *GetUserInfoReq) Reset() {
	*x = GetUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoReq) ProtoMessage() {}

func (x *GetUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoReq.ProtoReflect.Descriptor instead.
func (*GetUserInfoReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{9}
}

func (x *GetUserInfoReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *GetUserInfoReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type GetUserInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetUserInfoRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetUserInfoRsp) Reset() {
	*x = GetUserInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoRsp) ProtoMessage() {}

func (x *GetUserInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoRsp.ProtoReflect.Descriptor instead.
func (*GetUserInfoRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{10}
}

func (x *GetUserInfoRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetUserInfoRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetUserInfoRsp) GetData() *GetUserInfoRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetLatestBlockTimestampReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLatestBlockTimestampReq) Reset() {
	*x = GetLatestBlockTimestampReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestBlockTimestampReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestBlockTimestampReq) ProtoMessage() {}

func (x *GetLatestBlockTimestampReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestBlockTimestampReq.ProtoReflect.Descriptor instead.
func (*GetLatestBlockTimestampReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{11}
}

type GetLatestBlockTimestampRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetLatestBlockTimestampRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetLatestBlockTimestampRsp) Reset() {
	*x = GetLatestBlockTimestampRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestBlockTimestampRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestBlockTimestampRsp) ProtoMessage() {}

func (x *GetLatestBlockTimestampRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestBlockTimestampRsp.ProtoReflect.Descriptor instead.
func (*GetLatestBlockTimestampRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{12}
}

func (x *GetLatestBlockTimestampRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetLatestBlockTimestampRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetLatestBlockTimestampRsp) GetData() *GetLatestBlockTimestampRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type CheckTxReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *CheckTxReq) Reset() {
	*x = CheckTxReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTxReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTxReq) ProtoMessage() {}

func (x *CheckTxReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTxReq.ProtoReflect.Descriptor instead.
func (*CheckTxReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{13}
}

func (x *CheckTxReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *CheckTxReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type CheckTxRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *CheckTxRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CheckTxRsp) Reset() {
	*x = CheckTxRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTxRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTxRsp) ProtoMessage() {}

func (x *CheckTxRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTxRsp.ProtoReflect.Descriptor instead.
func (*CheckTxRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{14}
}

func (x *CheckTxRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CheckTxRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CheckTxRsp) GetData() *CheckTxRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchCheckTxReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BatchCheckTxReq) Reset() {
	*x = BatchCheckTxReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCheckTxReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckTxReq) ProtoMessage() {}

func (x *BatchCheckTxReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckTxReq.ProtoReflect.Descriptor instead.
func (*BatchCheckTxReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{15}
}

func (x *BatchCheckTxReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *BatchCheckTxReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *BatchCheckTxReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchCheckTxRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *BatchCheckTxRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BatchCheckTxRsp) Reset() {
	*x = BatchCheckTxRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCheckTxRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckTxRsp) ProtoMessage() {}

func (x *BatchCheckTxRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckTxRsp.ProtoReflect.Descriptor instead.
func (*BatchCheckTxRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{16}
}

func (x *BatchCheckTxRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BatchCheckTxRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BatchCheckTxRsp) GetData() *BatchCheckTxRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type AddCredentialReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddCredentialReq) Reset() {
	*x = AddCredentialReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCredentialReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCredentialReq) ProtoMessage() {}

func (x *AddCredentialReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCredentialReq.ProtoReflect.Descriptor instead.
func (*AddCredentialReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{17}
}

func (x *AddCredentialReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *AddCredentialReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *AddCredentialReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AddCredentialRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AddCredentialRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddCredentialRsp) Reset() {
	*x = AddCredentialRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCredentialRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCredentialRsp) ProtoMessage() {}

func (x *AddCredentialRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCredentialRsp.ProtoReflect.Descriptor instead.
func (*AddCredentialRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{18}
}

func (x *AddCredentialRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddCredentialRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddCredentialRsp) GetData() *AddCredentialRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchAddCredentialReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BatchAddCredentialReq) Reset() {
	*x = BatchAddCredentialReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchAddCredentialReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddCredentialReq) ProtoMessage() {}

func (x *BatchAddCredentialReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddCredentialReq.ProtoReflect.Descriptor instead.
func (*BatchAddCredentialReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{19}
}

func (x *BatchAddCredentialReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *BatchAddCredentialReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *BatchAddCredentialReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchAddCredentialRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *BatchAddCredentialRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BatchAddCredentialRsp) Reset() {
	*x = BatchAddCredentialRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchAddCredentialRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddCredentialRsp) ProtoMessage() {}

func (x *BatchAddCredentialRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddCredentialRsp.ProtoReflect.Descriptor instead.
func (*BatchAddCredentialRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{20}
}

func (x *BatchAddCredentialRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BatchAddCredentialRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BatchAddCredentialRsp) GetData() *BatchAddCredentialRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteCredentialReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteCredentialReq) Reset() {
	*x = DeleteCredentialReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCredentialReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCredentialReq) ProtoMessage() {}

func (x *DeleteCredentialReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCredentialReq.ProtoReflect.Descriptor instead.
func (*DeleteCredentialReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteCredentialReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *DeleteCredentialReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *DeleteCredentialReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteCredentialRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *DeleteCredentialRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteCredentialRsp) Reset() {
	*x = DeleteCredentialRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCredentialRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCredentialRsp) ProtoMessage() {}

func (x *DeleteCredentialRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCredentialRsp.ProtoReflect.Descriptor instead.
func (*DeleteCredentialRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteCredentialRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteCredentialRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DeleteCredentialRsp) GetData() *DeleteCredentialRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchDeleteCredentialReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BatchDeleteCredentialReq) Reset() {
	*x = BatchDeleteCredentialReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchDeleteCredentialReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteCredentialReq) ProtoMessage() {}

func (x *BatchDeleteCredentialReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteCredentialReq.ProtoReflect.Descriptor instead.
func (*BatchDeleteCredentialReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{23}
}

func (x *BatchDeleteCredentialReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *BatchDeleteCredentialReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *BatchDeleteCredentialReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchDeleteCredentialRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *BatchDeleteCredentialRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BatchDeleteCredentialRsp) Reset() {
	*x = BatchDeleteCredentialRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchDeleteCredentialRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteCredentialRsp) ProtoMessage() {}

func (x *BatchDeleteCredentialRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteCredentialRsp.ProtoReflect.Descriptor instead.
func (*BatchDeleteCredentialRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{24}
}

func (x *BatchDeleteCredentialRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BatchDeleteCredentialRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BatchDeleteCredentialRsp) GetData() *BatchDeleteCredentialRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetCredentialReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *GetCredentialReq) Reset() {
	*x = GetCredentialReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialReq) ProtoMessage() {}

func (x *GetCredentialReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialReq.ProtoReflect.Descriptor instead.
func (*GetCredentialReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{25}
}

func (x *GetCredentialReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *GetCredentialReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type GetCredentialRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetCredentialRsp_Item `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCredentialRsp) Reset() {
	*x = GetCredentialRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialRsp) ProtoMessage() {}

func (x *GetCredentialRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialRsp.ProtoReflect.Descriptor instead.
func (*GetCredentialRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{26}
}

func (x *GetCredentialRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCredentialRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetCredentialRsp) GetData() *GetCredentialRsp_Item {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteAllCredentialReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *DeleteAllCredentialReq) Reset() {
	*x = DeleteAllCredentialReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAllCredentialReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllCredentialReq) ProtoMessage() {}

func (x *DeleteAllCredentialReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllCredentialReq.ProtoReflect.Descriptor instead.
func (*DeleteAllCredentialReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteAllCredentialReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *DeleteAllCredentialReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type DeleteAllCredentialRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *EmptyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteAllCredentialRsp) Reset() {
	*x = DeleteAllCredentialRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAllCredentialRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllCredentialRsp) ProtoMessage() {}

func (x *DeleteAllCredentialRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllCredentialRsp.ProtoReflect.Descriptor instead.
func (*DeleteAllCredentialRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteAllCredentialRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteAllCredentialRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DeleteAllCredentialRsp) GetData() *EmptyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAllCredentialTimestampReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *GetAllCredentialTimestampReq) Reset() {
	*x = GetAllCredentialTimestampReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCredentialTimestampReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCredentialTimestampReq) ProtoMessage() {}

func (x *GetAllCredentialTimestampReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCredentialTimestampReq.ProtoReflect.Descriptor instead.
func (*GetAllCredentialTimestampReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{29}
}

func (x *GetAllCredentialTimestampReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *GetAllCredentialTimestampReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type GetAllCredentialTimestampRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*GetAllCredentialTimestampRsp_Item `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAllCredentialTimestampRsp) Reset() {
	*x = GetAllCredentialTimestampRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCredentialTimestampRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCredentialTimestampRsp) ProtoMessage() {}

func (x *GetAllCredentialTimestampRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCredentialTimestampRsp.ProtoReflect.Descriptor instead.
func (*GetAllCredentialTimestampRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{30}
}

func (x *GetAllCredentialTimestampRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAllCredentialTimestampRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetAllCredentialTimestampRsp) GetData() []*GetAllCredentialTimestampRsp_Item {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetCredentialListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *GetCredentialListReq) Reset() {
	*x = GetCredentialListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialListReq) ProtoMessage() {}

func (x *GetCredentialListReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialListReq.ProtoReflect.Descriptor instead.
func (*GetCredentialListReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{31}
}

func (x *GetCredentialListReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *GetCredentialListReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type GetCredentialListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*GetCredentialListRsp_Item `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCredentialListRsp) Reset() {
	*x = GetCredentialListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialListRsp) ProtoMessage() {}

func (x *GetCredentialListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialListRsp.ProtoReflect.Descriptor instead.
func (*GetCredentialListRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{32}
}

func (x *GetCredentialListRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCredentialListRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetCredentialListRsp) GetData() []*GetCredentialListRsp_Item {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetVersionDescReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *GetVersionDescReq) Reset() {
	*x = GetVersionDescReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionDescReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionDescReq) ProtoMessage() {}

func (x *GetVersionDescReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionDescReq.ProtoReflect.Descriptor instead.
func (*GetVersionDescReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{33}
}

func (x *GetVersionDescReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *GetVersionDescReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type GetVersionDescRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetVersionDescRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetVersionDescRsp) Reset() {
	*x = GetVersionDescRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionDescRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionDescRsp) ProtoMessage() {}

func (x *GetVersionDescRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionDescRsp.ProtoReflect.Descriptor instead.
func (*GetVersionDescRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{34}
}

func (x *GetVersionDescRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetVersionDescRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetVersionDescRsp) GetData() *GetVersionDescRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type StorageReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *StorageReportReq) Reset() {
	*x = StorageReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageReportReq) ProtoMessage() {}

func (x *StorageReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageReportReq.ProtoReflect.Descriptor instead.
func (*StorageReportReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{35}
}

func (x *StorageReportReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *StorageReportReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type StorageReportRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *EmptyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StorageReportRsp) Reset() {
	*x = StorageReportRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageReportRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageReportRsp) ProtoMessage() {}

func (x *StorageReportRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageReportRsp.ProtoReflect.Descriptor instead.
func (*StorageReportRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{36}
}

func (x *StorageReportRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *StorageReportRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *StorageReportRsp) GetData() *EmptyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type StorageStatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *StorageStatReq) Reset() {
	*x = StorageStatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageStatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageStatReq) ProtoMessage() {}

func (x *StorageStatReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageStatReq.ProtoReflect.Descriptor instead.
func (*StorageStatReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{37}
}

func (x *StorageStatReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *StorageStatReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type StorageStatRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *StorageStatRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StorageStatRsp) Reset() {
	*x = StorageStatRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageStatRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageStatRsp) ProtoMessage() {}

func (x *StorageStatRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageStatRsp.ProtoReflect.Descriptor instead.
func (*StorageStatRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{38}
}

func (x *StorageStatRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *StorageStatRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *StorageStatRsp) GetData() *StorageStatRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// AdminRegisterReq
type AdminRegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminRegisterReq) Reset() {
	*x = AdminRegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminRegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminRegisterReq) ProtoMessage() {}

func (x *AdminRegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminRegisterReq.ProtoReflect.Descriptor instead.
func (*AdminRegisterReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{39}
}

func (x *AdminRegisterReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *AdminRegisterReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *AdminRegisterReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// AdminRegisterRsp
type AdminRegisterRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AdminRegisterRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminRegisterRsp) Reset() {
	*x = AdminRegisterRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminRegisterRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminRegisterRsp) ProtoMessage() {}

func (x *AdminRegisterRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminRegisterRsp.ProtoReflect.Descriptor instead.
func (*AdminRegisterRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{40}
}

func (x *AdminRegisterRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AdminRegisterRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AdminRegisterRsp) GetData() *AdminRegisterRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// AdminAuthorizationReq
type AdminAuthorizationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *AdminAuthorizationReq) Reset() {
	*x = AdminAuthorizationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAuthorizationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAuthorizationReq) ProtoMessage() {}

func (x *AdminAuthorizationReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAuthorizationReq.ProtoReflect.Descriptor instead.
func (*AdminAuthorizationReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{41}
}

func (x *AdminAuthorizationReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *AdminAuthorizationReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

// AdminAuthorizationReq
type AdminAuthorizationRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AdminAuthorizationRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminAuthorizationRsp) Reset() {
	*x = AdminAuthorizationRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAuthorizationRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAuthorizationRsp) ProtoMessage() {}

func (x *AdminAuthorizationRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAuthorizationRsp.ProtoReflect.Descriptor instead.
func (*AdminAuthorizationRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{42}
}

func (x *AdminAuthorizationRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AdminAuthorizationRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AdminAuthorizationRsp) GetData() *AdminAuthorizationRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdminAddMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminAddMemberReq) Reset() {
	*x = AdminAddMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAddMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAddMemberReq) ProtoMessage() {}

func (x *AdminAddMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAddMemberReq.ProtoReflect.Descriptor instead.
func (*AdminAddMemberReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{43}
}

func (x *AdminAddMemberReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *AdminAddMemberReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *AdminAddMemberReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdminAddMemberRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *EmptyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminAddMemberRsp) Reset() {
	*x = AdminAddMemberRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAddMemberRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAddMemberRsp) ProtoMessage() {}

func (x *AdminAddMemberRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAddMemberRsp.ProtoReflect.Descriptor instead.
func (*AdminAddMemberRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{44}
}

func (x *AdminAddMemberRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AdminAddMemberRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AdminAddMemberRsp) GetData() *EmptyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdminBatchImportMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminBatchImportMemberReq) Reset() {
	*x = AdminBatchImportMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminBatchImportMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminBatchImportMemberReq) ProtoMessage() {}

func (x *AdminBatchImportMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminBatchImportMemberReq.ProtoReflect.Descriptor instead.
func (*AdminBatchImportMemberReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{45}
}

func (x *AdminBatchImportMemberReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *AdminBatchImportMemberReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *AdminBatchImportMemberReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdminBatchImportMemberRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AdminBatchImportMemberRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminBatchImportMemberRsp) Reset() {
	*x = AdminBatchImportMemberRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminBatchImportMemberRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminBatchImportMemberRsp) ProtoMessage() {}

func (x *AdminBatchImportMemberRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminBatchImportMemberRsp.ProtoReflect.Descriptor instead.
func (*AdminBatchImportMemberRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{46}
}

func (x *AdminBatchImportMemberRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AdminBatchImportMemberRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AdminBatchImportMemberRsp) GetData() *AdminBatchImportMemberRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdminUpdateMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminUpdateMemberReq) Reset() {
	*x = AdminUpdateMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateMemberReq) ProtoMessage() {}

func (x *AdminUpdateMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateMemberReq.ProtoReflect.Descriptor instead.
func (*AdminUpdateMemberReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{47}
}

func (x *AdminUpdateMemberReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *AdminUpdateMemberReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *AdminUpdateMemberReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdminUpdateMemberRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *EmptyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminUpdateMemberRsp) Reset() {
	*x = AdminUpdateMemberRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateMemberRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateMemberRsp) ProtoMessage() {}

func (x *AdminUpdateMemberRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateMemberRsp.ProtoReflect.Descriptor instead.
func (*AdminUpdateMemberRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{48}
}

func (x *AdminUpdateMemberRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AdminUpdateMemberRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AdminUpdateMemberRsp) GetData() *EmptyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdminRemoveMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminRemoveMemberReq) Reset() {
	*x = AdminRemoveMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminRemoveMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminRemoveMemberReq) ProtoMessage() {}

func (x *AdminRemoveMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminRemoveMemberReq.ProtoReflect.Descriptor instead.
func (*AdminRemoveMemberReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{49}
}

func (x *AdminRemoveMemberReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *AdminRemoveMemberReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *AdminRemoveMemberReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdminRemoveMemberRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *EmptyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminRemoveMemberRsp) Reset() {
	*x = AdminRemoveMemberRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminRemoveMemberRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminRemoveMemberRsp) ProtoMessage() {}

func (x *AdminRemoveMemberRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminRemoveMemberRsp.ProtoReflect.Descriptor instead.
func (*AdminRemoveMemberRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{50}
}

func (x *AdminRemoveMemberRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AdminRemoveMemberRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AdminRemoveMemberRsp) GetData() *EmptyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdminTransferSuperAdminReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminTransferSuperAdminReq) Reset() {
	*x = AdminTransferSuperAdminReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminTransferSuperAdminReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminTransferSuperAdminReq) ProtoMessage() {}

func (x *AdminTransferSuperAdminReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminTransferSuperAdminReq.ProtoReflect.Descriptor instead.
func (*AdminTransferSuperAdminReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{51}
}

func (x *AdminTransferSuperAdminReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *AdminTransferSuperAdminReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *AdminTransferSuperAdminReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdminTransferSuperAdminRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *EmptyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminTransferSuperAdminRsp) Reset() {
	*x = AdminTransferSuperAdminRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminTransferSuperAdminRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminTransferSuperAdminRsp) ProtoMessage() {}

func (x *AdminTransferSuperAdminRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminTransferSuperAdminRsp.ProtoReflect.Descriptor instead.
func (*AdminTransferSuperAdminRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{52}
}

func (x *AdminTransferSuperAdminRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AdminTransferSuperAdminRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AdminTransferSuperAdminRsp) GetData() *EmptyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdminGetMemberListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminGetMemberListReq) Reset() {
	*x = AdminGetMemberListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetMemberListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetMemberListReq) ProtoMessage() {}

func (x *AdminGetMemberListReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetMemberListReq.ProtoReflect.Descriptor instead.
func (*AdminGetMemberListReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{53}
}

func (x *AdminGetMemberListReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *AdminGetMemberListReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *AdminGetMemberListReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdminGetMemberListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AdminGetMemberListRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminGetMemberListRsp) Reset() {
	*x = AdminGetMemberListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetMemberListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetMemberListRsp) ProtoMessage() {}

func (x *AdminGetMemberListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetMemberListRsp.ProtoReflect.Descriptor instead.
func (*AdminGetMemberListRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{54}
}

func (x *AdminGetMemberListRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AdminGetMemberListRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AdminGetMemberListRsp) GetData() *AdminGetMemberListRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdminGetOrgInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminGetOrgInfoReq) Reset() {
	*x = AdminGetOrgInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetOrgInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetOrgInfoReq) ProtoMessage() {}

func (x *AdminGetOrgInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetOrgInfoReq.ProtoReflect.Descriptor instead.
func (*AdminGetOrgInfoReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{55}
}

func (x *AdminGetOrgInfoReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *AdminGetOrgInfoReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *AdminGetOrgInfoReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdminGetOrgInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminGetOrgInfoRsp) Reset() {
	*x = AdminGetOrgInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetOrgInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetOrgInfoRsp) ProtoMessage() {}

func (x *AdminGetOrgInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetOrgInfoRsp.ProtoReflect.Descriptor instead.
func (*AdminGetOrgInfoRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{56}
}

func (x *AdminGetOrgInfoRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AdminGetOrgInfoRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AdminGetOrgInfoRsp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type AdminUpdateOrgInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminUpdateOrgInfoReq) Reset() {
	*x = AdminUpdateOrgInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateOrgInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateOrgInfoReq) ProtoMessage() {}

func (x *AdminUpdateOrgInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateOrgInfoReq.ProtoReflect.Descriptor instead.
func (*AdminUpdateOrgInfoReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{57}
}

func (x *AdminUpdateOrgInfoReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *AdminUpdateOrgInfoReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *AdminUpdateOrgInfoReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdminUpdateOrgInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *EmptyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminUpdateOrgInfoRsp) Reset() {
	*x = AdminUpdateOrgInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateOrgInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateOrgInfoRsp) ProtoMessage() {}

func (x *AdminUpdateOrgInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateOrgInfoRsp.ProtoReflect.Descriptor instead.
func (*AdminUpdateOrgInfoRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{58}
}

func (x *AdminUpdateOrgInfoRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AdminUpdateOrgInfoRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AdminUpdateOrgInfoRsp) GetData() *EmptyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdminOperationHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminOperationHistoryReq) Reset() {
	*x = AdminOperationHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminOperationHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminOperationHistoryReq) ProtoMessage() {}

func (x *AdminOperationHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminOperationHistoryReq.ProtoReflect.Descriptor instead.
func (*AdminOperationHistoryReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{59}
}

func (x *AdminOperationHistoryReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *AdminOperationHistoryReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *AdminOperationHistoryReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdminOperationHistoryRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*AdminOperationHistoryRsp_Item `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminOperationHistoryRsp) Reset() {
	*x = AdminOperationHistoryRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminOperationHistoryRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminOperationHistoryRsp) ProtoMessage() {}

func (x *AdminOperationHistoryRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminOperationHistoryRsp.ProtoReflect.Descriptor instead.
func (*AdminOperationHistoryRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{60}
}

func (x *AdminOperationHistoryRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AdminOperationHistoryRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AdminOperationHistoryRsp) GetData() []*AdminOperationHistoryRsp_Item {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAdminMnemonicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAdminMnemonicReq) Reset() {
	*x = GetAdminMnemonicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminMnemonicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminMnemonicReq) ProtoMessage() {}

func (x *GetAdminMnemonicReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminMnemonicReq.ProtoReflect.Descriptor instead.
func (*GetAdminMnemonicReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{61}
}

func (x *GetAdminMnemonicReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *GetAdminMnemonicReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *GetAdminMnemonicReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAdminMnemonicRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetAdminMnemonicRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAdminMnemonicRsp) Reset() {
	*x = GetAdminMnemonicRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminMnemonicRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminMnemonicRsp) ProtoMessage() {}

func (x *GetAdminMnemonicRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminMnemonicRsp.ProtoReflect.Descriptor instead.
func (*GetAdminMnemonicRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{62}
}

func (x *GetAdminMnemonicRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAdminMnemonicRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetAdminMnemonicRsp) GetData() *GetAdminMnemonicRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderCreateReq) Reset() {
	*x = ShareFolderCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderCreateReq) ProtoMessage() {}

func (x *ShareFolderCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderCreateReq.ProtoReflect.Descriptor instead.
func (*ShareFolderCreateReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{63}
}

func (x *ShareFolderCreateReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ShareFolderCreateReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *ShareFolderCreateReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderCreateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *EmptyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderCreateRsp) Reset() {
	*x = ShareFolderCreateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderCreateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderCreateRsp) ProtoMessage() {}

func (x *ShareFolderCreateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderCreateRsp.ProtoReflect.Descriptor instead.
func (*ShareFolderCreateRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{64}
}

func (x *ShareFolderCreateRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ShareFolderCreateRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ShareFolderCreateRsp) GetData() *EmptyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderUpdateReq) Reset() {
	*x = ShareFolderUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderUpdateReq) ProtoMessage() {}

func (x *ShareFolderUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderUpdateReq.ProtoReflect.Descriptor instead.
func (*ShareFolderUpdateReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{65}
}

func (x *ShareFolderUpdateReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ShareFolderUpdateReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *ShareFolderUpdateReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderUpdateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *EmptyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderUpdateRsp) Reset() {
	*x = ShareFolderUpdateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderUpdateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderUpdateRsp) ProtoMessage() {}

func (x *ShareFolderUpdateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderUpdateRsp.ProtoReflect.Descriptor instead.
func (*ShareFolderUpdateRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{66}
}

func (x *ShareFolderUpdateRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ShareFolderUpdateRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ShareFolderUpdateRsp) GetData() *EmptyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderDestroyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderDestroyReq) Reset() {
	*x = ShareFolderDestroyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderDestroyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderDestroyReq) ProtoMessage() {}

func (x *ShareFolderDestroyReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderDestroyReq.ProtoReflect.Descriptor instead.
func (*ShareFolderDestroyReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{67}
}

func (x *ShareFolderDestroyReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ShareFolderDestroyReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *ShareFolderDestroyReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderDestroyRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *EmptyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderDestroyRsp) Reset() {
	*x = ShareFolderDestroyRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderDestroyRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderDestroyRsp) ProtoMessage() {}

func (x *ShareFolderDestroyRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderDestroyRsp.ProtoReflect.Descriptor instead.
func (*ShareFolderDestroyRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{68}
}

func (x *ShareFolderDestroyRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ShareFolderDestroyRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ShareFolderDestroyRsp) GetData() *EmptyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderAddRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderAddRecordReq) Reset() {
	*x = ShareFolderAddRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderAddRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderAddRecordReq) ProtoMessage() {}

func (x *ShareFolderAddRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderAddRecordReq.ProtoReflect.Descriptor instead.
func (*ShareFolderAddRecordReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{69}
}

func (x *ShareFolderAddRecordReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ShareFolderAddRecordReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *ShareFolderAddRecordReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderAddRecordRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *EmptyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderAddRecordRsp) Reset() {
	*x = ShareFolderAddRecordRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderAddRecordRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderAddRecordRsp) ProtoMessage() {}

func (x *ShareFolderAddRecordRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderAddRecordRsp.ProtoReflect.Descriptor instead.
func (*ShareFolderAddRecordRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{70}
}

func (x *ShareFolderAddRecordRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ShareFolderAddRecordRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ShareFolderAddRecordRsp) GetData() *EmptyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderDeleteRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderDeleteRecordReq) Reset() {
	*x = ShareFolderDeleteRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderDeleteRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderDeleteRecordReq) ProtoMessage() {}

func (x *ShareFolderDeleteRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderDeleteRecordReq.ProtoReflect.Descriptor instead.
func (*ShareFolderDeleteRecordReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{71}
}

func (x *ShareFolderDeleteRecordReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ShareFolderDeleteRecordReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *ShareFolderDeleteRecordReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderDeleteRecordRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *EmptyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderDeleteRecordRsp) Reset() {
	*x = ShareFolderDeleteRecordRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderDeleteRecordRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderDeleteRecordRsp) ProtoMessage() {}

func (x *ShareFolderDeleteRecordRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderDeleteRecordRsp.ProtoReflect.Descriptor instead.
func (*ShareFolderDeleteRecordRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{72}
}

func (x *ShareFolderDeleteRecordRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ShareFolderDeleteRecordRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ShareFolderDeleteRecordRsp) GetData() *EmptyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderAddMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderAddMemberReq) Reset() {
	*x = ShareFolderAddMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderAddMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderAddMemberReq) ProtoMessage() {}

func (x *ShareFolderAddMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderAddMemberReq.ProtoReflect.Descriptor instead.
func (*ShareFolderAddMemberReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{73}
}

func (x *ShareFolderAddMemberReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ShareFolderAddMemberReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *ShareFolderAddMemberReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderAddMemberRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *EmptyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderAddMemberRsp) Reset() {
	*x = ShareFolderAddMemberRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderAddMemberRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderAddMemberRsp) ProtoMessage() {}

func (x *ShareFolderAddMemberRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderAddMemberRsp.ProtoReflect.Descriptor instead.
func (*ShareFolderAddMemberRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{74}
}

func (x *ShareFolderAddMemberRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ShareFolderAddMemberRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ShareFolderAddMemberRsp) GetData() *EmptyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderUpdateMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderUpdateMemberReq) Reset() {
	*x = ShareFolderUpdateMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderUpdateMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderUpdateMemberReq) ProtoMessage() {}

func (x *ShareFolderUpdateMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderUpdateMemberReq.ProtoReflect.Descriptor instead.
func (*ShareFolderUpdateMemberReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{75}
}

func (x *ShareFolderUpdateMemberReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ShareFolderUpdateMemberReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *ShareFolderUpdateMemberReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderUpdateMemberRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *EmptyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderUpdateMemberRsp) Reset() {
	*x = ShareFolderUpdateMemberRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderUpdateMemberRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderUpdateMemberRsp) ProtoMessage() {}

func (x *ShareFolderUpdateMemberRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderUpdateMemberRsp.ProtoReflect.Descriptor instead.
func (*ShareFolderUpdateMemberRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{76}
}

func (x *ShareFolderUpdateMemberRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ShareFolderUpdateMemberRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ShareFolderUpdateMemberRsp) GetData() *EmptyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderMemberExitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderMemberExitReq) Reset() {
	*x = ShareFolderMemberExitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderMemberExitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderMemberExitReq) ProtoMessage() {}

func (x *ShareFolderMemberExitReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderMemberExitReq.ProtoReflect.Descriptor instead.
func (*ShareFolderMemberExitReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{77}
}

func (x *ShareFolderMemberExitReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ShareFolderMemberExitReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *ShareFolderMemberExitReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderMemberExitRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *EmptyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderMemberExitRsp) Reset() {
	*x = ShareFolderMemberExitRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderMemberExitRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderMemberExitRsp) ProtoMessage() {}

func (x *ShareFolderMemberExitRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderMemberExitRsp.ProtoReflect.Descriptor instead.
func (*ShareFolderMemberExitRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{78}
}

func (x *ShareFolderMemberExitRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ShareFolderMemberExitRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ShareFolderMemberExitRsp) GetData() *EmptyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderDeleteMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderDeleteMemberReq) Reset() {
	*x = ShareFolderDeleteMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderDeleteMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderDeleteMemberReq) ProtoMessage() {}

func (x *ShareFolderDeleteMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderDeleteMemberReq.ProtoReflect.Descriptor instead.
func (*ShareFolderDeleteMemberReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{79}
}

func (x *ShareFolderDeleteMemberReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ShareFolderDeleteMemberReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *ShareFolderDeleteMemberReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderDeleteMemberRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *EmptyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderDeleteMemberRsp) Reset() {
	*x = ShareFolderDeleteMemberRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderDeleteMemberRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderDeleteMemberRsp) ProtoMessage() {}

func (x *ShareFolderDeleteMemberRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderDeleteMemberRsp.ProtoReflect.Descriptor instead.
func (*ShareFolderDeleteMemberRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{80}
}

func (x *ShareFolderDeleteMemberRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ShareFolderDeleteMemberRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ShareFolderDeleteMemberRsp) GetData() *EmptyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderFolderListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *ShareFolderFolderListReq) Reset() {
	*x = ShareFolderFolderListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderFolderListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderFolderListReq) ProtoMessage() {}

func (x *ShareFolderFolderListReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderFolderListReq.ProtoReflect.Descriptor instead.
func (*ShareFolderFolderListReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{81}
}

func (x *ShareFolderFolderListReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ShareFolderFolderListReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type ShareFolderFolderListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *ShareFolderFolderListRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderFolderListRsp) Reset() {
	*x = ShareFolderFolderListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderFolderListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderFolderListRsp) ProtoMessage() {}

func (x *ShareFolderFolderListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderFolderListRsp.ProtoReflect.Descriptor instead.
func (*ShareFolderFolderListRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{82}
}

func (x *ShareFolderFolderListRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ShareFolderFolderListRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ShareFolderFolderListRsp) GetData() *ShareFolderFolderListRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderRecordListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderRecordListReq) Reset() {
	*x = ShareFolderRecordListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderRecordListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderRecordListReq) ProtoMessage() {}

func (x *ShareFolderRecordListReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderRecordListReq.ProtoReflect.Descriptor instead.
func (*ShareFolderRecordListReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{83}
}

func (x *ShareFolderRecordListReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ShareFolderRecordListReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *ShareFolderRecordListReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderRecordListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *ShareFolderRecordListRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderRecordListRsp) Reset() {
	*x = ShareFolderRecordListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderRecordListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderRecordListRsp) ProtoMessage() {}

func (x *ShareFolderRecordListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderRecordListRsp.ProtoReflect.Descriptor instead.
func (*ShareFolderRecordListRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{84}
}

func (x *ShareFolderRecordListRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ShareFolderRecordListRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ShareFolderRecordListRsp) GetData() *ShareFolderRecordListRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderRecordListByRidRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *ShareFolderRecordListByRidRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderRecordListByRidRsp) Reset() {
	*x = ShareFolderRecordListByRidRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderRecordListByRidRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderRecordListByRidRsp) ProtoMessage() {}

func (x *ShareFolderRecordListByRidRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderRecordListByRidRsp.ProtoReflect.Descriptor instead.
func (*ShareFolderRecordListByRidRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{85}
}

func (x *ShareFolderRecordListByRidRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ShareFolderRecordListByRidRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ShareFolderRecordListByRidRsp) GetData() *ShareFolderRecordListByRidRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderRecordListByRidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderRecordListByRidReq) Reset() {
	*x = ShareFolderRecordListByRidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderRecordListByRidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderRecordListByRidReq) ProtoMessage() {}

func (x *ShareFolderRecordListByRidReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderRecordListByRidReq.ProtoReflect.Descriptor instead.
func (*ShareFolderRecordListByRidReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{86}
}

func (x *ShareFolderRecordListByRidReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ShareFolderRecordListByRidReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *ShareFolderRecordListByRidReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderBatchUpdateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *EmptyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderBatchUpdateRsp) Reset() {
	*x = ShareFolderBatchUpdateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderBatchUpdateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderBatchUpdateRsp) ProtoMessage() {}

func (x *ShareFolderBatchUpdateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderBatchUpdateRsp.ProtoReflect.Descriptor instead.
func (*ShareFolderBatchUpdateRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{87}
}

func (x *ShareFolderBatchUpdateRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ShareFolderBatchUpdateRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ShareFolderBatchUpdateRsp) GetData() *EmptyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderBatchUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderBatchUpdateReq) Reset() {
	*x = ShareFolderBatchUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderBatchUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderBatchUpdateReq) ProtoMessage() {}

func (x *ShareFolderBatchUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderBatchUpdateReq.ProtoReflect.Descriptor instead.
func (*ShareFolderBatchUpdateReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{88}
}

func (x *ShareFolderBatchUpdateReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ShareFolderBatchUpdateReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *ShareFolderBatchUpdateReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderMemberListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderMemberListReq) Reset() {
	*x = ShareFolderMemberListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderMemberListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderMemberListReq) ProtoMessage() {}

func (x *ShareFolderMemberListReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderMemberListReq.ProtoReflect.Descriptor instead.
func (*ShareFolderMemberListReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{89}
}

func (x *ShareFolderMemberListReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ShareFolderMemberListReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *ShareFolderMemberListReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareFolderMemberListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *ShareFolderMemberListRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareFolderMemberListRsp) Reset() {
	*x = ShareFolderMemberListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderMemberListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderMemberListRsp) ProtoMessage() {}

func (x *ShareFolderMemberListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderMemberListRsp.ProtoReflect.Descriptor instead.
func (*ShareFolderMemberListRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{90}
}

func (x *ShareFolderMemberListRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ShareFolderMemberListRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ShareFolderMemberListRsp) GetData() *ShareFolderMemberListRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type FileUploadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FileUploadReq) Reset() {
	*x = FileUploadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUploadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadReq) ProtoMessage() {}

func (x *FileUploadReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadReq.ProtoReflect.Descriptor instead.
func (*FileUploadReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{91}
}

func (x *FileUploadReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *FileUploadReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *FileUploadReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type FileUploadRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *FileUploadRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FileUploadRsp) Reset() {
	*x = FileUploadRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUploadRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadRsp) ProtoMessage() {}

func (x *FileUploadRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadRsp.ProtoReflect.Descriptor instead.
func (*FileUploadRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{92}
}

func (x *FileUploadRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *FileUploadRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FileUploadRsp) GetData() *FileUploadRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type FileDownloadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *FileDownloadReq) Reset() {
	*x = FileDownloadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDownloadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadReq) ProtoMessage() {}

func (x *FileDownloadReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadReq.ProtoReflect.Descriptor instead.
func (*FileDownloadReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{93}
}

func (x *FileDownloadReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *FileDownloadReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type FileDownloadRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *FileDownloadRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FileDownloadRsp) Reset() {
	*x = FileDownloadRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDownloadRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadRsp) ProtoMessage() {}

func (x *FileDownloadRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadRsp.ProtoReflect.Descriptor instead.
func (*FileDownloadRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{94}
}

func (x *FileDownloadRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *FileDownloadRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FileDownloadRsp) GetData() *FileDownloadRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type FileAttachmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FileAttachmentReq) Reset() {
	*x = FileAttachmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileAttachmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileAttachmentReq) ProtoMessage() {}

func (x *FileAttachmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileAttachmentReq.ProtoReflect.Descriptor instead.
func (*FileAttachmentReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{95}
}

func (x *FileAttachmentReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *FileAttachmentReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *FileAttachmentReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type FileAttachmentRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *FileAttachmentRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FileAttachmentRsp) Reset() {
	*x = FileAttachmentRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileAttachmentRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileAttachmentRsp) ProtoMessage() {}

func (x *FileAttachmentRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileAttachmentRsp.ProtoReflect.Descriptor instead.
func (*FileAttachmentRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{96}
}

func (x *FileAttachmentRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *FileAttachmentRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FileAttachmentRsp) GetData() *FileAttachmentRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type FileReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FileReportReq) Reset() {
	*x = FileReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileReportReq) ProtoMessage() {}

func (x *FileReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileReportReq.ProtoReflect.Descriptor instead.
func (*FileReportReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{97}
}

func (x *FileReportReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *FileReportReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *FileReportReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type FileReportRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *EmptyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FileReportRsp) Reset() {
	*x = FileReportRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileReportRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileReportRsp) ProtoMessage() {}

func (x *FileReportRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileReportRsp.ProtoReflect.Descriptor instead.
func (*FileReportRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{98}
}

func (x *FileReportRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *FileReportRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FileReportRsp) GetData() *EmptyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetVersionConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetVersionConfigReq) Reset() {
	*x = GetVersionConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionConfigReq) ProtoMessage() {}

func (x *GetVersionConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionConfigReq.ProtoReflect.Descriptor instead.
func (*GetVersionConfigReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{99}
}

func (x *GetVersionConfigReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *GetVersionConfigReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *GetVersionConfigReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetVersionConfigRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetVersionConfigRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetVersionConfigRsp) Reset() {
	*x = GetVersionConfigRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionConfigRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionConfigRsp) ProtoMessage() {}

func (x *GetVersionConfigRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionConfigRsp.ProtoReflect.Descriptor instead.
func (*GetVersionConfigRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{100}
}

func (x *GetVersionConfigRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetVersionConfigRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetVersionConfigRsp) GetData() *GetVersionConfigRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type VipSubscriptionListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *VipSubscriptionListReq) Reset() {
	*x = VipSubscriptionListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipSubscriptionListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipSubscriptionListReq) ProtoMessage() {}

func (x *VipSubscriptionListReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipSubscriptionListReq.ProtoReflect.Descriptor instead.
func (*VipSubscriptionListReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{101}
}

func (x *VipSubscriptionListReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *VipSubscriptionListReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *VipSubscriptionListReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type VipSubscriptionListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *VipSubscriptionListRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *VipSubscriptionListRsp) Reset() {
	*x = VipSubscriptionListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipSubscriptionListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipSubscriptionListRsp) ProtoMessage() {}

func (x *VipSubscriptionListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipSubscriptionListRsp.ProtoReflect.Descriptor instead.
func (*VipSubscriptionListRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{102}
}

func (x *VipSubscriptionListRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *VipSubscriptionListRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *VipSubscriptionListRsp) GetData() *VipSubscriptionListRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type VipPaymentListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *VipPaymentListReq) Reset() {
	*x = VipPaymentListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipPaymentListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipPaymentListReq) ProtoMessage() {}

func (x *VipPaymentListReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipPaymentListReq.ProtoReflect.Descriptor instead.
func (*VipPaymentListReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{103}
}

func (x *VipPaymentListReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *VipPaymentListReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *VipPaymentListReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type VipPaymentListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *VipPaymentListRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *VipPaymentListRsp) Reset() {
	*x = VipPaymentListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipPaymentListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipPaymentListRsp) ProtoMessage() {}

func (x *VipPaymentListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipPaymentListRsp.ProtoReflect.Descriptor instead.
func (*VipPaymentListRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{104}
}

func (x *VipPaymentListRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *VipPaymentListRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *VipPaymentListRsp) GetData() *VipPaymentListRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type PayChannelList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplePay  *PayChannelItems `protobuf:"bytes,1,opt,name=apple_pay,json=applePay,proto3" json:"apple_pay,omitempty"`
	GooglePay *PayChannelItems `protobuf:"bytes,2,opt,name=google_pay,json=googlePay,proto3" json:"google_pay,omitempty"`
	Paypal    *PayChannelItems `protobuf:"bytes,3,opt,name=paypal,proto3" json:"paypal,omitempty"`
	Stripe    *PayChannelItems `protobuf:"bytes,4,opt,name=stripe,proto3" json:"stripe,omitempty"`
}

func (x *PayChannelList) Reset() {
	*x = PayChannelList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChannelList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChannelList) ProtoMessage() {}

func (x *PayChannelList) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChannelList.ProtoReflect.Descriptor instead.
func (*PayChannelList) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{105}
}

func (x *PayChannelList) GetApplePay() *PayChannelItems {
	if x != nil {
		return x.ApplePay
	}
	return nil
}

func (x *PayChannelList) GetGooglePay() *PayChannelItems {
	if x != nil {
		return x.GooglePay
	}
	return nil
}

func (x *PayChannelList) GetPaypal() *PayChannelItems {
	if x != nil {
		return x.Paypal
	}
	return nil
}

func (x *PayChannelList) GetStripe() *PayChannelItems {
	if x != nil {
		return x.Stripe
	}
	return nil
}

type PayChannelItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Premium  *PayChannelEditionItem `protobuf:"bytes,1,opt,name=premium,proto3" json:"premium,omitempty"`
	Families *PayChannelEditionItem `protobuf:"bytes,2,opt,name=families,proto3" json:"families,omitempty"`
	Teams    *PayChannelEditionItem `protobuf:"bytes,3,opt,name=teams,proto3" json:"teams,omitempty"`
	Business *PayChannelEditionItem `protobuf:"bytes,4,opt,name=business,proto3" json:"business,omitempty"`
}

func (x *PayChannelItems) Reset() {
	*x = PayChannelItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChannelItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChannelItems) ProtoMessage() {}

func (x *PayChannelItems) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChannelItems.ProtoReflect.Descriptor instead.
func (*PayChannelItems) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{106}
}

func (x *PayChannelItems) GetPremium() *PayChannelEditionItem {
	if x != nil {
		return x.Premium
	}
	return nil
}

func (x *PayChannelItems) GetFamilies() *PayChannelEditionItem {
	if x != nil {
		return x.Families
	}
	return nil
}

func (x *PayChannelItems) GetTeams() *PayChannelEditionItem {
	if x != nil {
		return x.Teams
	}
	return nil
}

func (x *PayChannelItems) GetBusiness() *PayChannelEditionItem {
	if x != nil {
		return x.Business
	}
	return nil
}

type PayChannelEditionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeUser string     `protobuf:"bytes,1,opt,name=include_user,json=includeUser,proto3" json:"include_user,omitempty"`
	ShareUser   string     `protobuf:"bytes,2,opt,name=share_user,json=shareUser,proto3" json:"share_user,omitempty"`
	ProductId   string     `protobuf:"bytes,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	SkuList     []*SkuItem `protobuf:"bytes,4,rep,name=sku_list,json=skuList,proto3" json:"sku_list,omitempty"`
}

func (x *PayChannelEditionItem) Reset() {
	*x = PayChannelEditionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChannelEditionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChannelEditionItem) ProtoMessage() {}

func (x *PayChannelEditionItem) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChannelEditionItem.ProtoReflect.Descriptor instead.
func (*PayChannelEditionItem) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{107}
}

func (x *PayChannelEditionItem) GetIncludeUser() string {
	if x != nil {
		return x.IncludeUser
	}
	return ""
}

func (x *PayChannelEditionItem) GetShareUser() string {
	if x != nil {
		return x.ShareUser
	}
	return ""
}

func (x *PayChannelEditionItem) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *PayChannelEditionItem) GetSkuList() []*SkuItem {
	if x != nil {
		return x.SkuList
	}
	return nil
}

type DescItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IconUrl string `protobuf:"bytes,1,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *DescItem) Reset() {
	*x = DescItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescItem) ProtoMessage() {}

func (x *DescItem) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescItem.ProtoReflect.Descriptor instead.
func (*DescItem) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{108}
}

func (x *DescItem) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *DescItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type SkuItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidityPeriod    string `protobuf:"bytes,1,opt,name=validity_period,json=validityPeriod,proto3" json:"validity_period,omitempty"`
	PriceDesc         string `protobuf:"bytes,2,opt,name=price_desc,json=priceDesc,proto3" json:"price_desc,omitempty"`
	Price             int32  `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	Currency          string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	Recommend         string `protobuf:"bytes,5,opt,name=recommend,proto3" json:"recommend,omitempty"`
	SkuId             string `protobuf:"bytes,6,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	SkuType           string `protobuf:"bytes,7,opt,name=sku_type,json=skuType,proto3" json:"sku_type,omitempty"`
	GoodId            int64  `protobuf:"varint,8,opt,name=good_id,json=goodId,proto3" json:"good_id,omitempty"`
	OneMonthPrice     int32  `protobuf:"varint,9,opt,name=one_month_price,json=oneMonthPrice,proto3" json:"one_month_price,omitempty"`
	OneUserPrice      int32  `protobuf:"varint,10,opt,name=one_user_price,json=oneUserPrice,proto3" json:"one_user_price,omitempty"`
	Save              string `protobuf:"bytes,11,opt,name=save,proto3" json:"save,omitempty"`
	FreeDays          string `protobuf:"bytes,12,opt,name=free_days,json=freeDays,proto3" json:"free_days,omitempty"`
	PriceType         string `protobuf:"bytes,13,opt,name=price_type,json=priceType,proto3" json:"price_type,omitempty"`
	Probation         string `protobuf:"bytes,14,opt,name=probation,proto3" json:"probation,omitempty"`
	Platform          string `protobuf:"bytes,15,opt,name=platform,proto3" json:"platform,omitempty"`
	Discount          int32  `protobuf:"varint,16,opt,name=discount,proto3" json:"discount,omitempty"`
	OriginalPrice     string `protobuf:"bytes,17,opt,name=original_price,json=originalPrice,proto3" json:"original_price,omitempty"`
	OriginalPriceShow string `protobuf:"bytes,18,opt,name=original_price_show,json=originalPriceShow,proto3" json:"original_price_show,omitempty"`
}

func (x *SkuItem) Reset() {
	*x = SkuItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuItem) ProtoMessage() {}

func (x *SkuItem) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuItem.ProtoReflect.Descriptor instead.
func (*SkuItem) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{109}
}

func (x *SkuItem) GetValidityPeriod() string {
	if x != nil {
		return x.ValidityPeriod
	}
	return ""
}

func (x *SkuItem) GetPriceDesc() string {
	if x != nil {
		return x.PriceDesc
	}
	return ""
}

func (x *SkuItem) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SkuItem) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *SkuItem) GetRecommend() string {
	if x != nil {
		return x.Recommend
	}
	return ""
}

func (x *SkuItem) GetSkuId() string {
	if x != nil {
		return x.SkuId
	}
	return ""
}

func (x *SkuItem) GetSkuType() string {
	if x != nil {
		return x.SkuType
	}
	return ""
}

func (x *SkuItem) GetGoodId() int64 {
	if x != nil {
		return x.GoodId
	}
	return 0
}

func (x *SkuItem) GetOneMonthPrice() int32 {
	if x != nil {
		return x.OneMonthPrice
	}
	return 0
}

func (x *SkuItem) GetOneUserPrice() int32 {
	if x != nil {
		return x.OneUserPrice
	}
	return 0
}

func (x *SkuItem) GetSave() string {
	if x != nil {
		return x.Save
	}
	return ""
}

func (x *SkuItem) GetFreeDays() string {
	if x != nil {
		return x.FreeDays
	}
	return ""
}

func (x *SkuItem) GetPriceType() string {
	if x != nil {
		return x.PriceType
	}
	return ""
}

func (x *SkuItem) GetProbation() string {
	if x != nil {
		return x.Probation
	}
	return ""
}

func (x *SkuItem) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *SkuItem) GetDiscount() int32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *SkuItem) GetOriginalPrice() string {
	if x != nil {
		return x.OriginalPrice
	}
	return ""
}

func (x *SkuItem) GetOriginalPriceShow() string {
	if x != nil {
		return x.OriginalPriceShow
	}
	return ""
}

type VipCreateOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *VipCreateOrderReq) Reset() {
	*x = VipCreateOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipCreateOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipCreateOrderReq) ProtoMessage() {}

func (x *VipCreateOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipCreateOrderReq.ProtoReflect.Descriptor instead.
func (*VipCreateOrderReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{110}
}

func (x *VipCreateOrderReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *VipCreateOrderReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *VipCreateOrderReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type VipCreateOrderRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *VipCreateOrderRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *VipCreateOrderRsp) Reset() {
	*x = VipCreateOrderRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipCreateOrderRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipCreateOrderRsp) ProtoMessage() {}

func (x *VipCreateOrderRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipCreateOrderRsp.ProtoReflect.Descriptor instead.
func (*VipCreateOrderRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{111}
}

func (x *VipCreateOrderRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *VipCreateOrderRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *VipCreateOrderRsp) GetData() *VipCreateOrderRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type VipCheckOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *VipCheckOrderReq) Reset() {
	*x = VipCheckOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipCheckOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipCheckOrderReq) ProtoMessage() {}

func (x *VipCheckOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipCheckOrderReq.ProtoReflect.Descriptor instead.
func (*VipCheckOrderReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{112}
}

func (x *VipCheckOrderReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *VipCheckOrderReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *VipCheckOrderReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type VipCheckOrderRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *VipCheckOrderRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *VipCheckOrderRsp) Reset() {
	*x = VipCheckOrderRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipCheckOrderRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipCheckOrderRsp) ProtoMessage() {}

func (x *VipCheckOrderRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipCheckOrderRsp.ProtoReflect.Descriptor instead.
func (*VipCheckOrderRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{113}
}

func (x *VipCheckOrderRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *VipCheckOrderRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *VipCheckOrderRsp) GetData() *VipCheckOrderRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type VipAppleVerifyReceiptReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *VipAppleVerifyReceiptReq) Reset() {
	*x = VipAppleVerifyReceiptReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipAppleVerifyReceiptReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipAppleVerifyReceiptReq) ProtoMessage() {}

func (x *VipAppleVerifyReceiptReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipAppleVerifyReceiptReq.ProtoReflect.Descriptor instead.
func (*VipAppleVerifyReceiptReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{114}
}

func (x *VipAppleVerifyReceiptReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *VipAppleVerifyReceiptReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *VipAppleVerifyReceiptReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type VipAppleVerifyReceiptRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *VipAppleVerifyReceiptRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *VipAppleVerifyReceiptRsp) Reset() {
	*x = VipAppleVerifyReceiptRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipAppleVerifyReceiptRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipAppleVerifyReceiptRsp) ProtoMessage() {}

func (x *VipAppleVerifyReceiptRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipAppleVerifyReceiptRsp.ProtoReflect.Descriptor instead.
func (*VipAppleVerifyReceiptRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{115}
}

func (x *VipAppleVerifyReceiptRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *VipAppleVerifyReceiptRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *VipAppleVerifyReceiptRsp) GetData() *VipAppleVerifyReceiptRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetDiscountCodeInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *GetDiscountCodeInfoReq) Reset() {
	*x = GetDiscountCodeInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscountCodeInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscountCodeInfoReq) ProtoMessage() {}

func (x *GetDiscountCodeInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscountCodeInfoReq.ProtoReflect.Descriptor instead.
func (*GetDiscountCodeInfoReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{116}
}

func (x *GetDiscountCodeInfoReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *GetDiscountCodeInfoReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type GetDiscountCodeInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetDiscountCodeInfoRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetDiscountCodeInfoRsp) Reset() {
	*x = GetDiscountCodeInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscountCodeInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscountCodeInfoRsp) ProtoMessage() {}

func (x *GetDiscountCodeInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscountCodeInfoRsp.ProtoReflect.Descriptor instead.
func (*GetDiscountCodeInfoRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{117}
}

func (x *GetDiscountCodeInfoRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetDiscountCodeInfoRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetDiscountCodeInfoRsp) GetData() *GetDiscountCodeInfoRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type VipGetConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *VipGetConfigReq) Reset() {
	*x = VipGetConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipGetConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipGetConfigReq) ProtoMessage() {}

func (x *VipGetConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipGetConfigReq.ProtoReflect.Descriptor instead.
func (*VipGetConfigReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{118}
}

func (x *VipGetConfigReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *VipGetConfigReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *VipGetConfigReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type VipGetConfigRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *VipGetConfigRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *VipGetConfigRsp) Reset() {
	*x = VipGetConfigRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipGetConfigRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipGetConfigRsp) ProtoMessage() {}

func (x *VipGetConfigRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipGetConfigRsp.ProtoReflect.Descriptor instead.
func (*VipGetConfigRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{119}
}

func (x *VipGetConfigRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *VipGetConfigRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *VipGetConfigRsp) GetData() *VipGetConfigRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetOrderListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetOrderListReq) Reset() {
	*x = GetOrderListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderListReq) ProtoMessage() {}

func (x *GetOrderListReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderListReq.ProtoReflect.Descriptor instead.
func (*GetOrderListReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{120}
}

func (x *GetOrderListReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *GetOrderListReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *GetOrderListReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetOrderListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetOrderListRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetOrderListRsp) Reset() {
	*x = GetOrderListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderListRsp) ProtoMessage() {}

func (x *GetOrderListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderListRsp.ProtoReflect.Descriptor instead.
func (*GetOrderListRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{121}
}

func (x *GetOrderListRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetOrderListRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetOrderListRsp) GetData() *GetOrderListRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type OrderList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr        string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	OrgId       string `protobuf:"bytes,2,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	OrderId     string `protobuf:"bytes,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	ProductDesc string `protobuf:"bytes,4,opt,name=product_desc,json=productDesc,proto3" json:"product_desc,omitempty"`
	Status      int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	PayPlatform string `protobuf:"bytes,6,opt,name=pay_platform,json=payPlatform,proto3" json:"pay_platform,omitempty"`
	Amount      int32  `protobuf:"varint,7,opt,name=amount,proto3" json:"amount,omitempty"`
	PayTime     int32  `protobuf:"varint,8,opt,name=pay_time,json=payTime,proto3" json:"pay_time,omitempty"`
}

func (x *OrderList) Reset() {
	*x = OrderList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderList) ProtoMessage() {}

func (x *OrderList) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderList.ProtoReflect.Descriptor instead.
func (*OrderList) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{122}
}

func (x *OrderList) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *OrderList) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *OrderList) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OrderList) GetProductDesc() string {
	if x != nil {
		return x.ProductDesc
	}
	return ""
}

func (x *OrderList) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OrderList) GetPayPlatform() string {
	if x != nil {
		return x.PayPlatform
	}
	return ""
}

func (x *OrderList) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *OrderList) GetPayTime() int32 {
	if x != nil {
		return x.PayTime
	}
	return 0
}

type GetVipIOSPromotionSignReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetVipIOSPromotionSignReq) Reset() {
	*x = GetVipIOSPromotionSignReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVipIOSPromotionSignReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVipIOSPromotionSignReq) ProtoMessage() {}

func (x *GetVipIOSPromotionSignReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVipIOSPromotionSignReq.ProtoReflect.Descriptor instead.
func (*GetVipIOSPromotionSignReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{123}
}

func (x *GetVipIOSPromotionSignReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *GetVipIOSPromotionSignReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *GetVipIOSPromotionSignReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetVipIOSPromotionSignRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetVipIOSPromotionSignRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetVipIOSPromotionSignRsp) Reset() {
	*x = GetVipIOSPromotionSignRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVipIOSPromotionSignRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVipIOSPromotionSignRsp) ProtoMessage() {}

func (x *GetVipIOSPromotionSignRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVipIOSPromotionSignRsp.ProtoReflect.Descriptor instead.
func (*GetVipIOSPromotionSignRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{124}
}

func (x *GetVipIOSPromotionSignRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetVipIOSPromotionSignRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetVipIOSPromotionSignRsp) GetData() *GetVipIOSPromotionSignRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetPersonalSignAddressRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signs []*GetPersonalSignAddressRsp_Sign `protobuf:"bytes,1,rep,name=signs,proto3" json:"signs,omitempty"`
}

func (x *GetPersonalSignAddressRsp_Data) Reset() {
	*x = GetPersonalSignAddressRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonalSignAddressRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonalSignAddressRsp_Data) ProtoMessage() {}

func (x *GetPersonalSignAddressRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonalSignAddressRsp_Data.ProtoReflect.Descriptor instead.
func (*GetPersonalSignAddressRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{6, 0}
}

func (x *GetPersonalSignAddressRsp_Data) GetSigns() []*GetPersonalSignAddressRsp_Sign {
	if x != nil {
		return x.Signs
	}
	return nil
}

type GetPersonalSignAddressRsp_Sign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sign   string `protobuf:"bytes,1,opt,name=sign,proto3" json:"sign,omitempty"`
	Params string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *GetPersonalSignAddressRsp_Sign) Reset() {
	*x = GetPersonalSignAddressRsp_Sign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonalSignAddressRsp_Sign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonalSignAddressRsp_Sign) ProtoMessage() {}

func (x *GetPersonalSignAddressRsp_Sign) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonalSignAddressRsp_Sign.ProtoReflect.Descriptor instead.
func (*GetPersonalSignAddressRsp_Sign) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{6, 1}
}

func (x *GetPersonalSignAddressRsp_Sign) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *GetPersonalSignAddressRsp_Sign) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type GetVIPInfoRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string                     `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string                     `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	OrgInfo   []*GetVIPInfoRsp_Data_List `protobuf:"bytes,3,rep,name=org_info,proto3" json:"org_info,omitempty"`
}

func (x *GetVIPInfoRsp_Data) Reset() {
	*x = GetVIPInfoRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVIPInfoRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVIPInfoRsp_Data) ProtoMessage() {}

func (x *GetVIPInfoRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVIPInfoRsp_Data.ProtoReflect.Descriptor instead.
func (*GetVIPInfoRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{8, 0}
}

func (x *GetVIPInfoRsp_Data) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *GetVIPInfoRsp_Data) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *GetVIPInfoRsp_Data) GetOrgInfo() []*GetVIPInfoRsp_Data_List {
	if x != nil {
		return x.OrgInfo
	}
	return nil
}

type GetVIPInfoRsp_Data_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId               string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	OrgName             []byte `protobuf:"bytes,2,opt,name=org_name,json=orgName,proto3" json:"org_name,omitempty"`
	Logo                []byte `protobuf:"bytes,3,opt,name=logo,proto3" json:"logo,omitempty"`
	SelfHostUrl         []byte `protobuf:"bytes,4,opt,name=self_host_url,json=selfHostUrl,proto3" json:"self_host_url,omitempty"`
	MemberShareMnemonic []byte `protobuf:"bytes,5,opt,name=member_share_mnemonic,json=memberShareMnemonic,proto3" json:"member_share_mnemonic,omitempty"`
}

func (x *GetVIPInfoRsp_Data_List) Reset() {
	*x = GetVIPInfoRsp_Data_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVIPInfoRsp_Data_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVIPInfoRsp_Data_List) ProtoMessage() {}

func (x *GetVIPInfoRsp_Data_List) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVIPInfoRsp_Data_List.ProtoReflect.Descriptor instead.
func (*GetVIPInfoRsp_Data_List) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{8, 0, 0}
}

func (x *GetVIPInfoRsp_Data_List) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *GetVIPInfoRsp_Data_List) GetOrgName() []byte {
	if x != nil {
		return x.OrgName
	}
	return nil
}

func (x *GetVIPInfoRsp_Data_List) GetLogo() []byte {
	if x != nil {
		return x.Logo
	}
	return nil
}

func (x *GetVIPInfoRsp_Data_List) GetSelfHostUrl() []byte {
	if x != nil {
		return x.SelfHostUrl
	}
	return nil
}

func (x *GetVIPInfoRsp_Data_List) GetMemberShareMnemonic() []byte {
	if x != nil {
		return x.MemberShareMnemonic
	}
	return nil
}

type GetUserInfoRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr        string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	ChainId     string `protobuf:"bytes,2,opt,name=chain_id,proto3" json:"chain_id,omitempty"`
	InviteCode  string `protobuf:"bytes,3,opt,name=invite_code,proto3" json:"invite_code,omitempty"`
	StorageType string `protobuf:"bytes,4,opt,name=storage_type,proto3" json:"storage_type,omitempty"`
}

func (x *GetUserInfoRsp_Data) Reset() {
	*x = GetUserInfoRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoRsp_Data) ProtoMessage() {}

func (x *GetUserInfoRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoRsp_Data.ProtoReflect.Descriptor instead.
func (*GetUserInfoRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{10, 0}
}

func (x *GetUserInfoRsp_Data) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *GetUserInfoRsp_Data) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *GetUserInfoRsp_Data) GetInviteCode() string {
	if x != nil {
		return x.InviteCode
	}
	return ""
}

func (x *GetUserInfoRsp_Data) GetStorageType() string {
	if x != nil {
		return x.StorageType
	}
	return ""
}

type GetLatestBlockTimestampRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int32 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *GetLatestBlockTimestampRsp_Data) Reset() {
	*x = GetLatestBlockTimestampRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestBlockTimestampRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestBlockTimestampRsp_Data) ProtoMessage() {}

func (x *GetLatestBlockTimestampRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestBlockTimestampRsp_Data.ProtoReflect.Descriptor instead.
func (*GetLatestBlockTimestampRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{12, 0}
}

func (x *GetLatestBlockTimestampRsp_Data) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type CheckTxRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess int32 `protobuf:"varint,1,opt,name=is_success,proto3" json:"is_success,omitempty"`
}

func (x *CheckTxRsp_Data) Reset() {
	*x = CheckTxRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTxRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTxRsp_Data) ProtoMessage() {}

func (x *CheckTxRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTxRsp_Data.ProtoReflect.Descriptor instead.
func (*CheckTxRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{14, 0}
}

func (x *CheckTxRsp_Data) GetIsSuccess() int32 {
	if x != nil {
		return x.IsSuccess
	}
	return 0
}

type BatchCheckTxRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*BatchCheckTxRsp_Data_ListItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *BatchCheckTxRsp_Data) Reset() {
	*x = BatchCheckTxRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCheckTxRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckTxRsp_Data) ProtoMessage() {}

func (x *BatchCheckTxRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckTxRsp_Data.ProtoReflect.Descriptor instead.
func (*BatchCheckTxRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{16, 0}
}

func (x *BatchCheckTxRsp_Data) GetList() []*BatchCheckTxRsp_Data_ListItem {
	if x != nil {
		return x.List
	}
	return nil
}

type BatchCheckTxRsp_Data_ListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash    string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Success int32  `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *BatchCheckTxRsp_Data_ListItem) Reset() {
	*x = BatchCheckTxRsp_Data_ListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCheckTxRsp_Data_ListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckTxRsp_Data_ListItem) ProtoMessage() {}

func (x *BatchCheckTxRsp_Data_ListItem) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckTxRsp_Data_ListItem.ProtoReflect.Descriptor instead.
func (*BatchCheckTxRsp_Data_ListItem) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{16, 0, 0}
}

func (x *BatchCheckTxRsp_Data_ListItem) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *BatchCheckTxRsp_Data_ListItem) GetSuccess() int32 {
	if x != nil {
		return x.Success
	}
	return 0
}

type AddCredentialRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash string `protobuf:"bytes,1,opt,name=tx_hash,proto3" json:"tx_hash,omitempty"`
}

func (x *AddCredentialRsp_Data) Reset() {
	*x = AddCredentialRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCredentialRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCredentialRsp_Data) ProtoMessage() {}

func (x *AddCredentialRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCredentialRsp_Data.ProtoReflect.Descriptor instead.
func (*AddCredentialRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{18, 0}
}

func (x *AddCredentialRsp_Data) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

type BatchAddCredentialRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*BatchAddCredentialRsp_Data_ListItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *BatchAddCredentialRsp_Data) Reset() {
	*x = BatchAddCredentialRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchAddCredentialRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddCredentialRsp_Data) ProtoMessage() {}

func (x *BatchAddCredentialRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddCredentialRsp_Data.ProtoReflect.Descriptor instead.
func (*BatchAddCredentialRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{20, 0}
}

func (x *BatchAddCredentialRsp_Data) GetList() []*BatchAddCredentialRsp_Data_ListItem {
	if x != nil {
		return x.List
	}
	return nil
}

type BatchAddCredentialRsp_Data_ListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Hash string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *BatchAddCredentialRsp_Data_ListItem) Reset() {
	*x = BatchAddCredentialRsp_Data_ListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchAddCredentialRsp_Data_ListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddCredentialRsp_Data_ListItem) ProtoMessage() {}

func (x *BatchAddCredentialRsp_Data_ListItem) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddCredentialRsp_Data_ListItem.ProtoReflect.Descriptor instead.
func (*BatchAddCredentialRsp_Data_ListItem) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{20, 0, 0}
}

func (x *BatchAddCredentialRsp_Data_ListItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BatchAddCredentialRsp_Data_ListItem) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type DeleteCredentialRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash string `protobuf:"bytes,1,opt,name=tx_hash,proto3" json:"tx_hash,omitempty"`
}

func (x *DeleteCredentialRsp_Data) Reset() {
	*x = DeleteCredentialRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCredentialRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCredentialRsp_Data) ProtoMessage() {}

func (x *DeleteCredentialRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCredentialRsp_Data.ProtoReflect.Descriptor instead.
func (*DeleteCredentialRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{22, 0}
}

func (x *DeleteCredentialRsp_Data) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

type BatchDeleteCredentialRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*BatchDeleteCredentialRsp_Data_ListItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *BatchDeleteCredentialRsp_Data) Reset() {
	*x = BatchDeleteCredentialRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchDeleteCredentialRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteCredentialRsp_Data) ProtoMessage() {}

func (x *BatchDeleteCredentialRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteCredentialRsp_Data.ProtoReflect.Descriptor instead.
func (*BatchDeleteCredentialRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{24, 0}
}

func (x *BatchDeleteCredentialRsp_Data) GetList() []*BatchDeleteCredentialRsp_Data_ListItem {
	if x != nil {
		return x.List
	}
	return nil
}

type BatchDeleteCredentialRsp_Data_ListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Hash string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *BatchDeleteCredentialRsp_Data_ListItem) Reset() {
	*x = BatchDeleteCredentialRsp_Data_ListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchDeleteCredentialRsp_Data_ListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteCredentialRsp_Data_ListItem) ProtoMessage() {}

func (x *BatchDeleteCredentialRsp_Data_ListItem) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteCredentialRsp_Data_ListItem.ProtoReflect.Descriptor instead.
func (*BatchDeleteCredentialRsp_Data_ListItem) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{24, 0, 0}
}

func (x *BatchDeleteCredentialRsp_Data_ListItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BatchDeleteCredentialRsp_Data_ListItem) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type GetCredentialRsp_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Credential  []byte `protobuf:"bytes,2,opt,name=credential,proto3" json:"credential,omitempty"`
	OpTimestamp int32  `protobuf:"varint,3,opt,name=op_timestamp,proto3" json:"op_timestamp,omitempty"`
}

func (x *GetCredentialRsp_Item) Reset() {
	*x = GetCredentialRsp_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialRsp_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialRsp_Item) ProtoMessage() {}

func (x *GetCredentialRsp_Item) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialRsp_Item.ProtoReflect.Descriptor instead.
func (*GetCredentialRsp_Item) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{26, 0}
}

func (x *GetCredentialRsp_Item) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetCredentialRsp_Item) GetCredential() []byte {
	if x != nil {
		return x.Credential
	}
	return nil
}

func (x *GetCredentialRsp_Item) GetOpTimestamp() int32 {
	if x != nil {
		return x.OpTimestamp
	}
	return 0
}

type GetAllCredentialTimestampRsp_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OpTimestamp int32  `protobuf:"varint,3,opt,name=op_timestamp,proto3" json:"op_timestamp,omitempty"`
}

func (x *GetAllCredentialTimestampRsp_Item) Reset() {
	*x = GetAllCredentialTimestampRsp_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCredentialTimestampRsp_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCredentialTimestampRsp_Item) ProtoMessage() {}

func (x *GetAllCredentialTimestampRsp_Item) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCredentialTimestampRsp_Item.ProtoReflect.Descriptor instead.
func (*GetAllCredentialTimestampRsp_Item) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{30, 0}
}

func (x *GetAllCredentialTimestampRsp_Item) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAllCredentialTimestampRsp_Item) GetOpTimestamp() int32 {
	if x != nil {
		return x.OpTimestamp
	}
	return 0
}

type GetCredentialListRsp_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Credential  []byte `protobuf:"bytes,2,opt,name=credential,proto3" json:"credential,omitempty"`
	OpTimestamp int32  `protobuf:"varint,3,opt,name=op_timestamp,proto3" json:"op_timestamp,omitempty"`
}

func (x *GetCredentialListRsp_Item) Reset() {
	*x = GetCredentialListRsp_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialListRsp_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialListRsp_Item) ProtoMessage() {}

func (x *GetCredentialListRsp_Item) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialListRsp_Item.ProtoReflect.Descriptor instead.
func (*GetCredentialListRsp_Item) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{32, 0}
}

func (x *GetCredentialListRsp_Item) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetCredentialListRsp_Item) GetCredential() []byte {
	if x != nil {
		return x.Credential
	}
	return nil
}

func (x *GetCredentialListRsp_Item) GetOpTimestamp() int32 {
	if x != nil {
		return x.OpTimestamp
	}
	return 0
}

type GetVersionDescRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionDesc string `protobuf:"bytes,1,opt,name=version_desc,proto3" json:"version_desc,omitempty"`
}

func (x *GetVersionDescRsp_Data) Reset() {
	*x = GetVersionDescRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionDescRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionDescRsp_Data) ProtoMessage() {}

func (x *GetVersionDescRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionDescRsp_Data.ProtoReflect.Descriptor instead.
func (*GetVersionDescRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{34, 0}
}

func (x *GetVersionDescRsp_Data) GetVersionDesc() string {
	if x != nil {
		return x.VersionDesc
	}
	return ""
}

type StorageStatRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalReal          int64  `protobuf:"varint,1,opt,name=total_real,json=totalReal,proto3" json:"total_real,omitempty"`
	TotalHumanReadable string `protobuf:"bytes,2,opt,name=total_human_readable,json=totalHumanReadable,proto3" json:"total_human_readable,omitempty"`
	Used               int64  `protobuf:"varint,3,opt,name=used,proto3" json:"used,omitempty"`
	Left               int64  `protobuf:"varint,4,opt,name=left,proto3" json:"left,omitempty"`
}

func (x *StorageStatRsp_Data) Reset() {
	*x = StorageStatRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageStatRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageStatRsp_Data) ProtoMessage() {}

func (x *StorageStatRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageStatRsp_Data.ProtoReflect.Descriptor instead.
func (*StorageStatRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{38, 0}
}

func (x *StorageStatRsp_Data) GetTotalReal() int64 {
	if x != nil {
		return x.TotalReal
	}
	return 0
}

func (x *StorageStatRsp_Data) GetTotalHumanReadable() string {
	if x != nil {
		return x.TotalHumanReadable
	}
	return ""
}

func (x *StorageStatRsp_Data) GetUsed() int64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *StorageStatRsp_Data) GetLeft() int64 {
	if x != nil {
		return x.Left
	}
	return 0
}

type AdminRegisterRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
}

func (x *AdminRegisterRsp_Data) Reset() {
	*x = AdminRegisterRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminRegisterRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminRegisterRsp_Data) ProtoMessage() {}

func (x *AdminRegisterRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminRegisterRsp_Data.ProtoReflect.Descriptor instead.
func (*AdminRegisterRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{40, 0}
}

func (x *AdminRegisterRsp_Data) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

type AdminAuthorizationRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorization string `protobuf:"bytes,1,opt,name=authorization,proto3" json:"authorization,omitempty"`
}

func (x *AdminAuthorizationRsp_Data) Reset() {
	*x = AdminAuthorizationRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAuthorizationRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAuthorizationRsp_Data) ProtoMessage() {}

func (x *AdminAuthorizationRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAuthorizationRsp_Data.ProtoReflect.Descriptor instead.
func (*AdminAuthorizationRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{42, 0}
}

func (x *AdminAuthorizationRsp_Data) GetAuthorization() string {
	if x != nil {
		return x.Authorization
	}
	return ""
}

type AdminBatchImportMemberRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*AdminBatchImportMemberRsp_List `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AdminBatchImportMemberRsp_Data) Reset() {
	*x = AdminBatchImportMemberRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminBatchImportMemberRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminBatchImportMemberRsp_Data) ProtoMessage() {}

func (x *AdminBatchImportMemberRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminBatchImportMemberRsp_Data.ProtoReflect.Descriptor instead.
func (*AdminBatchImportMemberRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{46, 0}
}

func (x *AdminBatchImportMemberRsp_Data) GetList() []*AdminBatchImportMemberRsp_List {
	if x != nil {
		return x.List
	}
	return nil
}

type AdminBatchImportMemberRsp_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line string `protobuf:"bytes,1,opt,name=line,proto3" json:"line,omitempty"`
	Tip  string `protobuf:"bytes,2,opt,name=tip,proto3" json:"tip,omitempty"`
}

func (x *AdminBatchImportMemberRsp_List) Reset() {
	*x = AdminBatchImportMemberRsp_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminBatchImportMemberRsp_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminBatchImportMemberRsp_List) ProtoMessage() {}

func (x *AdminBatchImportMemberRsp_List) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminBatchImportMemberRsp_List.ProtoReflect.Descriptor instead.
func (*AdminBatchImportMemberRsp_List) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{46, 1}
}

func (x *AdminBatchImportMemberRsp_List) GetLine() string {
	if x != nil {
		return x.Line
	}
	return ""
}

func (x *AdminBatchImportMemberRsp_List) GetTip() string {
	if x != nil {
		return x.Tip
	}
	return ""
}

type AdminGetMemberListRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*AdminGetMemberListRsp_List `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AdminGetMemberListRsp_Data) Reset() {
	*x = AdminGetMemberListRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetMemberListRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetMemberListRsp_Data) ProtoMessage() {}

func (x *AdminGetMemberListRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetMemberListRsp_Data.ProtoReflect.Descriptor instead.
func (*AdminGetMemberListRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{54, 0}
}

func (x *AdminGetMemberListRsp_Data) GetList() []*AdminGetMemberListRsp_List {
	if x != nil {
		return x.List
	}
	return nil
}

type AdminGetMemberListRsp_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAddr          string `protobuf:"bytes,1,opt,name=member_addr,json=memberAddr,proto3" json:"member_addr,omitempty"`
	MemberData          []byte `protobuf:"bytes,2,opt,name=member_data,json=memberData,proto3" json:"member_data,omitempty"`
	AdminShareMnemonic  []byte `protobuf:"bytes,3,opt,name=admin_share_mnemonic,json=adminShareMnemonic,proto3" json:"admin_share_mnemonic,omitempty"`
	MemberShareMnemonic []byte `protobuf:"bytes,4,opt,name=member_share_mnemonic,json=memberShareMnemonic,proto3" json:"member_share_mnemonic,omitempty"`
}

func (x *AdminGetMemberListRsp_List) Reset() {
	*x = AdminGetMemberListRsp_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetMemberListRsp_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetMemberListRsp_List) ProtoMessage() {}

func (x *AdminGetMemberListRsp_List) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetMemberListRsp_List.ProtoReflect.Descriptor instead.
func (*AdminGetMemberListRsp_List) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{54, 1}
}

func (x *AdminGetMemberListRsp_List) GetMemberAddr() string {
	if x != nil {
		return x.MemberAddr
	}
	return ""
}

func (x *AdminGetMemberListRsp_List) GetMemberData() []byte {
	if x != nil {
		return x.MemberData
	}
	return nil
}

func (x *AdminGetMemberListRsp_List) GetAdminShareMnemonic() []byte {
	if x != nil {
		return x.AdminShareMnemonic
	}
	return nil
}

func (x *AdminGetMemberListRsp_List) GetMemberShareMnemonic() []byte {
	if x != nil {
		return x.MemberShareMnemonic
	}
	return nil
}

type AdminOperationHistoryRsp_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr        string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Action      string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Content     string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	OpTimestamp int32  `protobuf:"varint,4,opt,name=op_timestamp,json=opTimestamp,proto3" json:"op_timestamp,omitempty"`
}

func (x *AdminOperationHistoryRsp_Item) Reset() {
	*x = AdminOperationHistoryRsp_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminOperationHistoryRsp_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminOperationHistoryRsp_Item) ProtoMessage() {}

func (x *AdminOperationHistoryRsp_Item) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminOperationHistoryRsp_Item.ProtoReflect.Descriptor instead.
func (*AdminOperationHistoryRsp_Item) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{60, 0}
}

func (x *AdminOperationHistoryRsp_Item) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *AdminOperationHistoryRsp_Item) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *AdminOperationHistoryRsp_Item) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AdminOperationHistoryRsp_Item) GetOpTimestamp() int32 {
	if x != nil {
		return x.OpTimestamp
	}
	return 0
}

type GetAdminMnemonicRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminShareMnemonic  []byte `protobuf:"bytes,1,opt,name=admin_share_mnemonic,json=adminShareMnemonic,proto3" json:"admin_share_mnemonic,omitempty"`
	MemberShareMnemonic []byte `protobuf:"bytes,2,opt,name=member_share_mnemonic,json=memberShareMnemonic,proto3" json:"member_share_mnemonic,omitempty"`
}

func (x *GetAdminMnemonicRsp_Data) Reset() {
	*x = GetAdminMnemonicRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminMnemonicRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminMnemonicRsp_Data) ProtoMessage() {}

func (x *GetAdminMnemonicRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminMnemonicRsp_Data.ProtoReflect.Descriptor instead.
func (*GetAdminMnemonicRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{62, 0}
}

func (x *GetAdminMnemonicRsp_Data) GetAdminShareMnemonic() []byte {
	if x != nil {
		return x.AdminShareMnemonic
	}
	return nil
}

func (x *GetAdminMnemonicRsp_Data) GetMemberShareMnemonic() []byte {
	if x != nil {
		return x.MemberShareMnemonic
	}
	return nil
}

type ShareFolderFolderListRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ShareFolderFolderListRsp_List `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ShareFolderFolderListRsp_Data) Reset() {
	*x = ShareFolderFolderListRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderFolderListRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderFolderListRsp_Data) ProtoMessage() {}

func (x *ShareFolderFolderListRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderFolderListRsp_Data.ProtoReflect.Descriptor instead.
func (*ShareFolderFolderListRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{82, 0}
}

func (x *ShareFolderFolderListRsp_Data) GetList() []*ShareFolderFolderListRsp_List {
	if x != nil {
		return x.List
	}
	return nil
}

type ShareFolderFolderListRsp_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FolderId       string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	FolderName     []byte `protobuf:"bytes,2,opt,name=folder_name,json=folderName,proto3" json:"folder_name,omitempty"`
	FolderOwner    string `protobuf:"bytes,3,opt,name=folder_owner,json=folderOwner,proto3" json:"folder_owner,omitempty"`
	FolderMnemonic []byte `protobuf:"bytes,4,opt,name=folder_mnemonic,json=folderMnemonic,proto3" json:"folder_mnemonic,omitempty"`
}

func (x *ShareFolderFolderListRsp_List) Reset() {
	*x = ShareFolderFolderListRsp_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderFolderListRsp_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderFolderListRsp_List) ProtoMessage() {}

func (x *ShareFolderFolderListRsp_List) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderFolderListRsp_List.ProtoReflect.Descriptor instead.
func (*ShareFolderFolderListRsp_List) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{82, 1}
}

func (x *ShareFolderFolderListRsp_List) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *ShareFolderFolderListRsp_List) GetFolderName() []byte {
	if x != nil {
		return x.FolderName
	}
	return nil
}

func (x *ShareFolderFolderListRsp_List) GetFolderOwner() string {
	if x != nil {
		return x.FolderOwner
	}
	return ""
}

func (x *ShareFolderFolderListRsp_List) GetFolderMnemonic() []byte {
	if x != nil {
		return x.FolderMnemonic
	}
	return nil
}

type ShareFolderRecordListRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ShareFolderRecordListRsp_List `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ShareFolderRecordListRsp_Data) Reset() {
	*x = ShareFolderRecordListRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderRecordListRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderRecordListRsp_Data) ProtoMessage() {}

func (x *ShareFolderRecordListRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderRecordListRsp_Data.ProtoReflect.Descriptor instead.
func (*ShareFolderRecordListRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{84, 0}
}

func (x *ShareFolderRecordListRsp_Data) GetList() []*ShareFolderRecordListRsp_List {
	if x != nil {
		return x.List
	}
	return nil
}

type ShareFolderRecordListRsp_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FolderId   string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	RecordId   string `protobuf:"bytes,2,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	Id         string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	RecordData []byte `protobuf:"bytes,4,opt,name=record_data,json=recordData,proto3" json:"record_data,omitempty"`
	OwnerAddr  string `protobuf:"bytes,5,opt,name=owner_addr,json=ownerAddr,proto3" json:"owner_addr,omitempty"`
}

func (x *ShareFolderRecordListRsp_List) Reset() {
	*x = ShareFolderRecordListRsp_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderRecordListRsp_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderRecordListRsp_List) ProtoMessage() {}

func (x *ShareFolderRecordListRsp_List) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderRecordListRsp_List.ProtoReflect.Descriptor instead.
func (*ShareFolderRecordListRsp_List) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{84, 1}
}

func (x *ShareFolderRecordListRsp_List) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *ShareFolderRecordListRsp_List) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *ShareFolderRecordListRsp_List) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ShareFolderRecordListRsp_List) GetRecordData() []byte {
	if x != nil {
		return x.RecordData
	}
	return nil
}

func (x *ShareFolderRecordListRsp_List) GetOwnerAddr() string {
	if x != nil {
		return x.OwnerAddr
	}
	return ""
}

type ShareFolderRecordListByRidRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ShareFolderRecordListByRidRsp_List `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ShareFolderRecordListByRidRsp_Data) Reset() {
	*x = ShareFolderRecordListByRidRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderRecordListByRidRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderRecordListByRidRsp_Data) ProtoMessage() {}

func (x *ShareFolderRecordListByRidRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderRecordListByRidRsp_Data.ProtoReflect.Descriptor instead.
func (*ShareFolderRecordListByRidRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{85, 0}
}

func (x *ShareFolderRecordListByRidRsp_Data) GetList() []*ShareFolderRecordListByRidRsp_List {
	if x != nil {
		return x.List
	}
	return nil
}

type ShareFolderRecordListByRidRsp_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FolderId       string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	RecordId       string `protobuf:"bytes,2,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	Id             string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	RecordData     []byte `protobuf:"bytes,4,opt,name=record_data,json=recordData,proto3" json:"record_data,omitempty"`
	FolderMnemonic []byte `protobuf:"bytes,6,opt,name=folder_mnemonic,json=folderMnemonic,proto3" json:"folder_mnemonic,omitempty"`
}

func (x *ShareFolderRecordListByRidRsp_List) Reset() {
	*x = ShareFolderRecordListByRidRsp_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderRecordListByRidRsp_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderRecordListByRidRsp_List) ProtoMessage() {}

func (x *ShareFolderRecordListByRidRsp_List) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderRecordListByRidRsp_List.ProtoReflect.Descriptor instead.
func (*ShareFolderRecordListByRidRsp_List) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{85, 1}
}

func (x *ShareFolderRecordListByRidRsp_List) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *ShareFolderRecordListByRidRsp_List) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *ShareFolderRecordListByRidRsp_List) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ShareFolderRecordListByRidRsp_List) GetRecordData() []byte {
	if x != nil {
		return x.RecordData
	}
	return nil
}

func (x *ShareFolderRecordListByRidRsp_List) GetFolderMnemonic() []byte {
	if x != nil {
		return x.FolderMnemonic
	}
	return nil
}

type ShareFolderMemberListRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ShareFolderMemberListRsp_List `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ShareFolderMemberListRsp_Data) Reset() {
	*x = ShareFolderMemberListRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderMemberListRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderMemberListRsp_Data) ProtoMessage() {}

func (x *ShareFolderMemberListRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderMemberListRsp_Data.ProtoReflect.Descriptor instead.
func (*ShareFolderMemberListRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{90, 0}
}

func (x *ShareFolderMemberListRsp_Data) GetList() []*ShareFolderMemberListRsp_List {
	if x != nil {
		return x.List
	}
	return nil
}

type ShareFolderMemberListRsp_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAddr     string `protobuf:"bytes,1,opt,name=member_addr,json=memberAddr,proto3" json:"member_addr,omitempty"`
	MemberName     []byte `protobuf:"bytes,2,opt,name=member_name,json=memberName,proto3" json:"member_name,omitempty"`
	MemberSign     string `protobuf:"bytes,3,opt,name=member_sign,json=memberSign,proto3" json:"member_sign,omitempty"`
	FolderId       string `protobuf:"bytes,4,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	FolderMnemonic []byte `protobuf:"bytes,5,opt,name=folder_mnemonic,json=folderMnemonic,proto3" json:"folder_mnemonic,omitempty"`
}

func (x *ShareFolderMemberListRsp_List) Reset() {
	*x = ShareFolderMemberListRsp_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFolderMemberListRsp_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFolderMemberListRsp_List) ProtoMessage() {}

func (x *ShareFolderMemberListRsp_List) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFolderMemberListRsp_List.ProtoReflect.Descriptor instead.
func (*ShareFolderMemberListRsp_List) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{90, 1}
}

func (x *ShareFolderMemberListRsp_List) GetMemberAddr() string {
	if x != nil {
		return x.MemberAddr
	}
	return ""
}

func (x *ShareFolderMemberListRsp_List) GetMemberName() []byte {
	if x != nil {
		return x.MemberName
	}
	return nil
}

func (x *ShareFolderMemberListRsp_List) GetMemberSign() string {
	if x != nil {
		return x.MemberSign
	}
	return ""
}

func (x *ShareFolderMemberListRsp_List) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *ShareFolderMemberListRsp_List) GetFolderMnemonic() []byte {
	if x != nil {
		return x.FolderMnemonic
	}
	return nil
}

type FileUploadRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *FileUploadRsp_Data) Reset() {
	*x = FileUploadRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUploadRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadRsp_Data) ProtoMessage() {}

func (x *FileUploadRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadRsp_Data.ProtoReflect.Descriptor instead.
func (*FileUploadRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{92, 0}
}

func (x *FileUploadRsp_Data) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type FileDownloadRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid     string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Content []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *FileDownloadRsp_Data) Reset() {
	*x = FileDownloadRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDownloadRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadRsp_Data) ProtoMessage() {}

func (x *FileDownloadRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadRsp_Data.ProtoReflect.Descriptor instead.
func (*FileDownloadRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{94, 0}
}

func (x *FileDownloadRsp_Data) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *FileDownloadRsp_Data) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type FileAttachmentRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Cid     string `protobuf:"bytes,3,opt,name=cid,proto3" json:"cid,omitempty"`
	Content []byte `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *FileAttachmentRsp_Data) Reset() {
	*x = FileAttachmentRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileAttachmentRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileAttachmentRsp_Data) ProtoMessage() {}

func (x *FileAttachmentRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileAttachmentRsp_Data.ProtoReflect.Descriptor instead.
func (*FileAttachmentRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{96, 0}
}

func (x *FileAttachmentRsp_Data) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *FileAttachmentRsp_Data) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FileAttachmentRsp_Data) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *FileAttachmentRsp_Data) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type GetVersionConfigRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionName                   string `protobuf:"bytes,1,opt,name=version_name,json=versionName,proto3" json:"version_name,omitempty"`
	VersionValue                  string `protobuf:"bytes,2,opt,name=version_value,json=versionValue,proto3" json:"version_value,omitempty"`
	RecordCountLimit              int32  `protobuf:"varint,3,opt,name=record_count_limit,json=recordCountLimit,proto3" json:"record_count_limit,omitempty"`
	OneRecordAttachmentCountLimit int32  `protobuf:"varint,4,opt,name=one_record_attachment_count_limit,json=oneRecordAttachmentCountLimit,proto3" json:"one_record_attachment_count_limit,omitempty"`
	OneUserAttachmentSpaceLimit   int64  `protobuf:"varint,5,opt,name=one_user_attachment_space_limit,json=oneUserAttachmentSpaceLimit,proto3" json:"one_user_attachment_space_limit,omitempty"`
	OneAttachmentSizeLimit        int64  `protobuf:"varint,6,opt,name=one_attachment_size_limit,json=oneAttachmentSizeLimit,proto3" json:"one_attachment_size_limit,omitempty"`
	SharefolderCreateLimit        int32  `protobuf:"varint,7,opt,name=sharefolder_create_limit,json=sharefolderCreateLimit,proto3" json:"sharefolder_create_limit,omitempty"`
	SharefolderRecordLimit        int32  `protobuf:"varint,8,opt,name=sharefolder_record_limit,json=sharefolderRecordLimit,proto3" json:"sharefolder_record_limit,omitempty"`
	SharefolderMemberLimit        int32  `protobuf:"varint,9,opt,name=sharefolder_member_limit,json=sharefolderMemberLimit,proto3" json:"sharefolder_member_limit,omitempty"`
	OneRecordWebsiteLimit         int32  `protobuf:"varint,10,opt,name=one_record_website_limit,json=oneRecordWebsiteLimit,proto3" json:"one_record_website_limit,omitempty"`
	OneRecordLinkwebsiteLimit     int32  `protobuf:"varint,11,opt,name=one_record_linkwebsite_limit,json=oneRecordLinkwebsiteLimit,proto3" json:"one_record_linkwebsite_limit,omitempty"`
	VersionUser                   int32  `protobuf:"varint,12,opt,name=version_user,json=versionUser,proto3" json:"version_user,omitempty"`
	AdminMemberLimit              int32  `protobuf:"varint,13,opt,name=admin_member_limit,json=adminMemberLimit,proto3" json:"admin_member_limit,omitempty"`
	OneRecordSizeLimit            int64  `protobuf:"varint,14,opt,name=one_record_size_limit,json=oneRecordSizeLimit,proto3" json:"one_record_size_limit,omitempty"`
	ShowRebate                    int32  `protobuf:"varint,15,opt,name=show_rebate,json=showRebate,proto3" json:"show_rebate,omitempty"`
	RebateRate                    string `protobuf:"bytes,16,opt,name=rebate_rate,json=rebateRate,proto3" json:"rebate_rate,omitempty"`
}

func (x *GetVersionConfigRsp_Data) Reset() {
	*x = GetVersionConfigRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionConfigRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionConfigRsp_Data) ProtoMessage() {}

func (x *GetVersionConfigRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionConfigRsp_Data.ProtoReflect.Descriptor instead.
func (*GetVersionConfigRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{100, 0}
}

func (x *GetVersionConfigRsp_Data) GetVersionName() string {
	if x != nil {
		return x.VersionName
	}
	return ""
}

func (x *GetVersionConfigRsp_Data) GetVersionValue() string {
	if x != nil {
		return x.VersionValue
	}
	return ""
}

func (x *GetVersionConfigRsp_Data) GetRecordCountLimit() int32 {
	if x != nil {
		return x.RecordCountLimit
	}
	return 0
}

func (x *GetVersionConfigRsp_Data) GetOneRecordAttachmentCountLimit() int32 {
	if x != nil {
		return x.OneRecordAttachmentCountLimit
	}
	return 0
}

func (x *GetVersionConfigRsp_Data) GetOneUserAttachmentSpaceLimit() int64 {
	if x != nil {
		return x.OneUserAttachmentSpaceLimit
	}
	return 0
}

func (x *GetVersionConfigRsp_Data) GetOneAttachmentSizeLimit() int64 {
	if x != nil {
		return x.OneAttachmentSizeLimit
	}
	return 0
}

func (x *GetVersionConfigRsp_Data) GetSharefolderCreateLimit() int32 {
	if x != nil {
		return x.SharefolderCreateLimit
	}
	return 0
}

func (x *GetVersionConfigRsp_Data) GetSharefolderRecordLimit() int32 {
	if x != nil {
		return x.SharefolderRecordLimit
	}
	return 0
}

func (x *GetVersionConfigRsp_Data) GetSharefolderMemberLimit() int32 {
	if x != nil {
		return x.SharefolderMemberLimit
	}
	return 0
}

func (x *GetVersionConfigRsp_Data) GetOneRecordWebsiteLimit() int32 {
	if x != nil {
		return x.OneRecordWebsiteLimit
	}
	return 0
}

func (x *GetVersionConfigRsp_Data) GetOneRecordLinkwebsiteLimit() int32 {
	if x != nil {
		return x.OneRecordLinkwebsiteLimit
	}
	return 0
}

func (x *GetVersionConfigRsp_Data) GetVersionUser() int32 {
	if x != nil {
		return x.VersionUser
	}
	return 0
}

func (x *GetVersionConfigRsp_Data) GetAdminMemberLimit() int32 {
	if x != nil {
		return x.AdminMemberLimit
	}
	return 0
}

func (x *GetVersionConfigRsp_Data) GetOneRecordSizeLimit() int64 {
	if x != nil {
		return x.OneRecordSizeLimit
	}
	return 0
}

func (x *GetVersionConfigRsp_Data) GetShowRebate() int32 {
	if x != nil {
		return x.ShowRebate
	}
	return 0
}

func (x *GetVersionConfigRsp_Data) GetRebateRate() string {
	if x != nil {
		return x.RebateRate
	}
	return ""
}

type VipSubscriptionListRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MyVip     []*VipSubscriptionListRsp_Data_VipItem `protobuf:"bytes,1,rep,name=my_vip,json=myVip,proto3" json:"my_vip,omitempty"`
	JoinedVip []*VipSubscriptionListRsp_Data_VipItem `protobuf:"bytes,2,rep,name=joined_vip,json=joinedVip,proto3" json:"joined_vip,omitempty"`
}

func (x *VipSubscriptionListRsp_Data) Reset() {
	*x = VipSubscriptionListRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipSubscriptionListRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipSubscriptionListRsp_Data) ProtoMessage() {}

func (x *VipSubscriptionListRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipSubscriptionListRsp_Data.ProtoReflect.Descriptor instead.
func (*VipSubscriptionListRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{102, 0}
}

func (x *VipSubscriptionListRsp_Data) GetMyVip() []*VipSubscriptionListRsp_Data_VipItem {
	if x != nil {
		return x.MyVip
	}
	return nil
}

func (x *VipSubscriptionListRsp_Data) GetJoinedVip() []*VipSubscriptionListRsp_Data_VipItem {
	if x != nil {
		return x.JoinedVip
	}
	return nil
}

type VipSubscriptionListRsp_Data_VipItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version             string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	VipName             string `protobuf:"bytes,2,opt,name=vip_name,json=vipName,proto3" json:"vip_name,omitempty"`
	OrgId               string `protobuf:"bytes,3,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	OrgName             []byte `protobuf:"bytes,4,opt,name=org_name,json=orgName,proto3" json:"org_name,omitempty"`
	MemberShareMnemonic []byte `protobuf:"bytes,5,opt,name=member_share_mnemonic,json=memberShareMnemonic,proto3" json:"member_share_mnemonic,omitempty"`
	VipType             string `protobuf:"bytes,6,opt,name=vip_type,json=vipType,proto3" json:"vip_type,omitempty"`
	Renewing            int32  `protobuf:"varint,7,opt,name=renewing,proto3" json:"renewing,omitempty"`
	StartTime           int32  `protobuf:"varint,8,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	ExpiredTime         int32  `protobuf:"varint,9,opt,name=expired_time,json=expiredTime,proto3" json:"expired_time,omitempty"`
	ActiveUser          int32  `protobuf:"varint,10,opt,name=active_user,json=activeUser,proto3" json:"active_user,omitempty"`
	BuyTime             int32  `protobuf:"varint,11,opt,name=buy_time,json=buyTime,proto3" json:"buy_time,omitempty"`
}

func (x *VipSubscriptionListRsp_Data_VipItem) Reset() {
	*x = VipSubscriptionListRsp_Data_VipItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipSubscriptionListRsp_Data_VipItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipSubscriptionListRsp_Data_VipItem) ProtoMessage() {}

func (x *VipSubscriptionListRsp_Data_VipItem) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipSubscriptionListRsp_Data_VipItem.ProtoReflect.Descriptor instead.
func (*VipSubscriptionListRsp_Data_VipItem) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{102, 0, 0}
}

func (x *VipSubscriptionListRsp_Data_VipItem) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *VipSubscriptionListRsp_Data_VipItem) GetVipName() string {
	if x != nil {
		return x.VipName
	}
	return ""
}

func (x *VipSubscriptionListRsp_Data_VipItem) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *VipSubscriptionListRsp_Data_VipItem) GetOrgName() []byte {
	if x != nil {
		return x.OrgName
	}
	return nil
}

func (x *VipSubscriptionListRsp_Data_VipItem) GetMemberShareMnemonic() []byte {
	if x != nil {
		return x.MemberShareMnemonic
	}
	return nil
}

func (x *VipSubscriptionListRsp_Data_VipItem) GetVipType() string {
	if x != nil {
		return x.VipType
	}
	return ""
}

func (x *VipSubscriptionListRsp_Data_VipItem) GetRenewing() int32 {
	if x != nil {
		return x.Renewing
	}
	return 0
}

func (x *VipSubscriptionListRsp_Data_VipItem) GetStartTime() int32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *VipSubscriptionListRsp_Data_VipItem) GetExpiredTime() int32 {
	if x != nil {
		return x.ExpiredTime
	}
	return 0
}

func (x *VipSubscriptionListRsp_Data_VipItem) GetActiveUser() int32 {
	if x != nil {
		return x.ActiveUser
	}
	return 0
}

func (x *VipSubscriptionListRsp_Data_VipItem) GetBuyTime() int32 {
	if x != nil {
		return x.BuyTime
	}
	return 0
}

type VipPaymentListRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeUser string     `protobuf:"bytes,1,opt,name=include_user,json=includeUser,proto3" json:"include_user,omitempty"`
	ShareUser   string     `protobuf:"bytes,2,opt,name=share_user,json=shareUser,proto3" json:"share_user,omitempty"`
	ProductId   string     `protobuf:"bytes,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Extend      string     `protobuf:"bytes,4,opt,name=extend,proto3" json:"extend,omitempty"`
	SkuList     []*SkuItem `protobuf:"bytes,5,rep,name=sku_list,json=skuList,proto3" json:"sku_list,omitempty"`
}

func (x *VipPaymentListRsp_Data) Reset() {
	*x = VipPaymentListRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipPaymentListRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipPaymentListRsp_Data) ProtoMessage() {}

func (x *VipPaymentListRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipPaymentListRsp_Data.ProtoReflect.Descriptor instead.
func (*VipPaymentListRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{104, 0}
}

func (x *VipPaymentListRsp_Data) GetIncludeUser() string {
	if x != nil {
		return x.IncludeUser
	}
	return ""
}

func (x *VipPaymentListRsp_Data) GetShareUser() string {
	if x != nil {
		return x.ShareUser
	}
	return ""
}

func (x *VipPaymentListRsp_Data) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *VipPaymentListRsp_Data) GetExtend() string {
	if x != nil {
		return x.Extend
	}
	return ""
}

func (x *VipPaymentListRsp_Data) GetSkuList() []*SkuItem {
	if x != nil {
		return x.SkuList
	}
	return nil
}

type VipCreateOrderRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId        string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	OutOrderId     string `protobuf:"bytes,2,opt,name=out_order_id,json=outOrderId,proto3" json:"out_order_id,omitempty"`
	PaymentVoucher string `protobuf:"bytes,3,opt,name=payment_voucher,json=paymentVoucher,proto3" json:"payment_voucher,omitempty"`
}

func (x *VipCreateOrderRsp_Data) Reset() {
	*x = VipCreateOrderRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipCreateOrderRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipCreateOrderRsp_Data) ProtoMessage() {}

func (x *VipCreateOrderRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipCreateOrderRsp_Data.ProtoReflect.Descriptor instead.
func (*VipCreateOrderRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{111, 0}
}

func (x *VipCreateOrderRsp_Data) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *VipCreateOrderRsp_Data) GetOutOrderId() string {
	if x != nil {
		return x.OutOrderId
	}
	return ""
}

func (x *VipCreateOrderRsp_Data) GetPaymentVoucher() string {
	if x != nil {
		return x.PaymentVoucher
	}
	return ""
}

type VipCheckOrderRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderStatus string `protobuf:"bytes,1,opt,name=order_status,json=orderStatus,proto3" json:"order_status,omitempty"`
}

func (x *VipCheckOrderRsp_Data) Reset() {
	*x = VipCheckOrderRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipCheckOrderRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipCheckOrderRsp_Data) ProtoMessage() {}

func (x *VipCheckOrderRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipCheckOrderRsp_Data.ProtoReflect.Descriptor instead.
func (*VipCheckOrderRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{113, 0}
}

func (x *VipCheckOrderRsp_Data) GetOrderStatus() string {
	if x != nil {
		return x.OrderStatus
	}
	return ""
}

type VipAppleVerifyReceiptRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *VipAppleVerifyReceiptRsp_Data) Reset() {
	*x = VipAppleVerifyReceiptRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipAppleVerifyReceiptRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipAppleVerifyReceiptRsp_Data) ProtoMessage() {}

func (x *VipAppleVerifyReceiptRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipAppleVerifyReceiptRsp_Data.ProtoReflect.Descriptor instead.
func (*VipAppleVerifyReceiptRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{115, 0}
}

func (x *VipAppleVerifyReceiptRsp_Data) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type GetDiscountCodeInfoRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Discount int32 `protobuf:"varint,1,opt,name=discount,proto3" json:"discount,omitempty"`
}

func (x *GetDiscountCodeInfoRsp_Data) Reset() {
	*x = GetDiscountCodeInfoRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscountCodeInfoRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscountCodeInfoRsp_Data) ProtoMessage() {}

func (x *GetDiscountCodeInfoRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscountCodeInfoRsp_Data.ProtoReflect.Descriptor instead.
func (*GetDiscountCodeInfoRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{117, 0}
}

func (x *GetDiscountCodeInfoRsp_Data) GetDiscount() int32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

type VipGetConfigRsp_Paypal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *VipGetConfigRsp_Paypal) Reset() {
	*x = VipGetConfigRsp_Paypal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipGetConfigRsp_Paypal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipGetConfigRsp_Paypal) ProtoMessage() {}

func (x *VipGetConfigRsp_Paypal) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipGetConfigRsp_Paypal.ProtoReflect.Descriptor instead.
func (*VipGetConfigRsp_Paypal) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{119, 0}
}

func (x *VipGetConfigRsp_Paypal) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type VipGetConfigRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paypal *VipGetConfigRsp_Paypal `protobuf:"bytes,1,opt,name=paypal,proto3" json:"paypal,omitempty"`
}

func (x *VipGetConfigRsp_Data) Reset() {
	*x = VipGetConfigRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipGetConfigRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipGetConfigRsp_Data) ProtoMessage() {}

func (x *VipGetConfigRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipGetConfigRsp_Data.ProtoReflect.Descriptor instead.
func (*VipGetConfigRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{119, 1}
}

func (x *VipGetConfigRsp_Data) GetPaypal() *VipGetConfigRsp_Paypal {
	if x != nil {
		return x.Paypal
	}
	return nil
}

type GetOrderListRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*OrderList `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetOrderListRsp_Data) Reset() {
	*x = GetOrderListRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderListRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderListRsp_Data) ProtoMessage() {}

func (x *GetOrderListRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderListRsp_Data.ProtoReflect.Descriptor instead.
func (*GetOrderListRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{121, 0}
}

func (x *GetOrderListRsp_Data) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetOrderListRsp_Data) GetList() []*OrderList {
	if x != nil {
		return x.List
	}
	return nil
}

type GetVipIOSPromotionSignRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedMsg string `protobuf:"bytes,1,opt,name=signed_msg,json=signedMsg,proto3" json:"signed_msg,omitempty"`
}

func (x *GetVipIOSPromotionSignRsp_Data) Reset() {
	*x = GetVipIOSPromotionSignRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVipIOSPromotionSignRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVipIOSPromotionSignRsp_Data) ProtoMessage() {}

func (x *GetVipIOSPromotionSignRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVipIOSPromotionSignRsp_Data.ProtoReflect.Descriptor instead.
func (*GetVipIOSPromotionSignRsp_Data) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{124, 0}
}

func (x *GetVipIOSPromotionSignRsp_Data) GetSignedMsg() string {
	if x != nil {
		return x.SignedMsg
	}
	return ""
}

var File_user_proto protoreflect.FileDescriptor

var file_user_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x0b, 0x0a, 0x09, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x22, 0xb7, 0x01,
	0x0a, 0x09, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0xb7, 0x01, 0x0a, 0x09, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x22, 0x43, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x58, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x51, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x53,
	0x69, 0x67, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x22, 0xf3, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x42, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x05, 0x73, 0x69, 0x67,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x73, 0x70, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x05,
	0x73, 0x69, 0x67, 0x6e, 0x73, 0x1a, 0x32, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x45, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x56, 0x49, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x22, 0x84, 0x03, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x56, 0x49, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x56, 0x49, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x9e, 0x02, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x39, 0x0a, 0x08, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x56, 0x49, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x1a, 0xa4, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x6f, 0x67, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12,
	0x22, 0x0a, 0x0d, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x66, 0x48, 0x6f, 0x73, 0x74,
	0x55, 0x72, 0x6c, 0x12, 0x32, 0x0a, 0x15, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x5f, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x13, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4d,
	0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x22, 0x46, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22,
	0xe3, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x7c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61,
	0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x65, 0x71, 0x22, 0xa3, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x24, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x42, 0x0a, 0x0a, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x54, 0x78, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x85, 0x01,
	0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x78, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x78, 0x52,
	0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x26, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x5b, 0x0a, 0x0f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x54, 0x78, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xe2, 0x01, 0x0a, 0x0f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x54, 0x78, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2e, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x78, 0x52, 0x73,
	0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x79, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x54, 0x78, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x38, 0x0a,
	0x08, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x5c, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8b, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x20, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x78, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x78, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x22, 0x61, 0x0a, 0x15, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xea, 0x01, 0x0a, 0x15, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x41, 0x64, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x41, 0x64, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x73,
	0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x75, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41,
	0x64, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x73, 0x70, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x1a, 0x2e, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x22, 0x5f, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x91, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x20, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x22, 0x64, 0x0a, 0x18, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf3,
	0x01, 0x0a, 0x18, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x73, 0x70, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x78, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x40, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x73, 0x70,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x1a, 0x2e, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x22, 0x48, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xc5,
	0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x73, 0x70, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x5a, 0x0a, 0x04, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x4e, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x63, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x54, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0xbd, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x73, 0x70, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3a, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x22, 0x4c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22,
	0xcd, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x33,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x5a, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x6f,
	0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22,
	0x49, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73,
	0x63, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x52, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x2a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x22, 0x48, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x5d,
	0x0a, 0x10, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x46, 0x0a,
	0x0e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xe6, 0x01, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2d,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x7f, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72,
	0x65, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x52, 0x65, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x68, 0x75,
	0x6d, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x52, 0x65,
	0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x65,
	0x66, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x22, 0x5c,
	0x0a, 0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x88, 0x01, 0x0a,
	0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x1d, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x15, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xa1, 0x01, 0x0a, 0x15, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73,
	0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x2c, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5d, 0x0a, 0x11, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5e, 0x0a, 0x11, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x65, 0x0a, 0x19, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xeb, 0x01, 0x0a, 0x19, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x40,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x73, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x1a, 0x2c, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x70, 0x22, 0x60,
	0x0a, 0x14, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x61, 0x0a, 0x14, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x60, 0x0a, 0x14, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x61, 0x0a, 0x14, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x66, 0x0a, 0x1a, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x67, 0x0a, 0x1a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x61, 0x0a, 0x15, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe2, 0x02, 0x0a,
	0x15, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x34, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x3c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x1a, 0xae, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x14, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x6d, 0x6e, 0x65, 0x6d, 0x6f,
	0x6e, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x12, 0x32, 0x0a,
	0x15, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x6d, 0x6e,
	0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x22, 0x5e, 0x0a, 0x12, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x4e, 0x0a, 0x12, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x61, 0x0a, 0x15, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x62, 0x0a, 0x15, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x64, 0x0a, 0x18, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xea,
	0x01, 0x0a, 0x18, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x73, 0x70, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x6f, 0x0a, 0x04, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x5f, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdd, 0x01, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63,
	0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x6c,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x12, 0x32, 0x0a, 0x15, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x22, 0x60, 0x0a, 0x14,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x61,
	0x0a, 0x14, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x60, 0x0a, 0x14, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x61, 0x0a, 0x14, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x61, 0x0a, 0x15, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x62, 0x0a, 0x15, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x63, 0x0a,
	0x17, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x64, 0x0a, 0x17, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x66, 0x0a, 0x1a, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x67, 0x0a, 0x1a, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x63, 0x0a, 0x17, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x64,
	0x0a, 0x17, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x66, 0x0a, 0x1a, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x67, 0x0a, 0x1a,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x64, 0x0a, 0x18, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x78, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x65, 0x0a, 0x18, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x45, 0x78, 0x69, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x66, 0x0a, 0x1a, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x67, 0x0a, 0x1a, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x50, 0x0a, 0x18, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xcd, 0x02, 0x0a, 0x18, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x3f, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x1a, 0x90, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x66,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f,
	0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4d, 0x6e, 0x65,
	0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x22, 0x64, 0x0a, 0x18, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xcd, 0x02, 0x0a, 0x18,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x37,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3f, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x37, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x90, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x22, 0xe6, 0x02, 0x0a, 0x1d,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x52, 0x69, 0x64, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79,
	0x52, 0x69, 0x64, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x44, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x52, 0x69, 0x64, 0x52, 0x73, 0x70, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x9a, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x66,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x22, 0x69, 0x0a, 0x1d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x52,
	0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x66, 0x0a, 0x19, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x65, 0x0a, 0x19, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x64,
	0x0a, 0x18, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xec, 0x02, 0x0a, 0x18, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x3f, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x1a, 0xaf, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0e, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4d, 0x6e, 0x65, 0x6d, 0x6f,
	0x6e, 0x69, 0x63, 0x22, 0x59, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7d,
	0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x18, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0x47, 0x0a,
	0x0f, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x32, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0x5d, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xd3, 0x01, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x66, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x59, 0x0a, 0x0d, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x5a, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x5f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xa7, 0x07, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0xb5, 0x06, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x48, 0x0a, 0x21, 0x6f, 0x6e, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1d, 0x6f,
	0x6e, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x44, 0x0a, 0x1f,
	0x6f, 0x6e, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1b, 0x6f, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x39, 0x0a, 0x19, 0x6f, 0x6e, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x6f, 0x6e, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x38, 0x0a,
	0x18, 0x73, 0x68, 0x61, 0x72, 0x65, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x16, 0x73, 0x68, 0x61, 0x72, 0x65, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x38, 0x0a, 0x18, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x38, 0x0a, 0x18, 0x73, 0x68, 0x61, 0x72, 0x65, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x16, 0x73, 0x68, 0x61, 0x72, 0x65, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x37, 0x0a, 0x18, 0x6f,
	0x6e, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x6f,
	0x6e, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x3f, 0x0a, 0x1c, 0x6f, 0x6e, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x19, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x6f, 0x6e, 0x65, 0x5f, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x53, 0x69, 0x7a, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x72, 0x65, 0x62, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x73, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x62, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x62, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x22, 0x62, 0x0a, 0x16, 0x56,
	0x69, 0x70, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xe6, 0x04, 0x0a, 0x16, 0x56, 0x69, 0x70, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x70, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xee, 0x03, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x40, 0x0a, 0x06, 0x6d, 0x79, 0x5f, 0x76, 0x69, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x70, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x56, 0x69, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x6d, 0x79, 0x56,
	0x69, 0x70, 0x12, 0x48, 0x0a, 0x0a, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x76, 0x69, 0x70,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x56, 0x69,
	0x70, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x56, 0x69, 0x70, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x56, 0x69, 0x70, 0x1a, 0xd9, 0x02, 0x0a,
	0x07, 0x56, 0x69, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a,
	0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x32, 0x0a, 0x15, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f,
	0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4d, 0x6e, 0x65, 0x6d, 0x6f,
	0x6e, 0x69, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x75, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x62, 0x75, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x11, 0x56, 0x69, 0x70, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x97, 0x02, 0x0a, 0x11, 0x56, 0x69, 0x70, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x70, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xa9, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21,
	0x0a, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x53, 0x6b, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0xd8, 0x01, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x5f, 0x70, 0x61,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x08,
	0x61, 0x70, 0x70, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x12, 0x34, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x12, 0x2d,
	0x0a, 0x06, 0x70, 0x61, 0x79, 0x70, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x79, 0x70, 0x61, 0x6c, 0x12, 0x2d, 0x0a,
	0x06, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x22, 0xed, 0x01, 0x0a,
	0x0f, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x35, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07,
	0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x12, 0x37, 0x0a, 0x08, 0x66, 0x61, 0x6d, 0x69, 0x6c,
	0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x69, 0x65, 0x73,
	0x12, 0x31, 0x0a, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x74, 0x65,
	0x61, 0x6d, 0x73, 0x12, 0x37, 0x0a, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x22, 0xa2, 0x01, 0x0a,
	0x15, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x53, 0x6b, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x3f, 0x0a, 0x08, 0x44, 0x65, 0x73, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0xb7, 0x04, 0x0a, 0x07, 0x53, 0x6b, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x27,
	0x0a, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x6b, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x6b, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x6f, 0x6f, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x6f, 0x6f, 0x64, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6f, 0x6e, 0x65, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6f, 0x6e, 0x65,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x6f, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x61, 0x76, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x61, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x64, 0x61, 0x79, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x65, 0x65, 0x44, 0x61, 0x79, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x13,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x22, 0x5d, 0x0a, 0x11,
	0x56, 0x69, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd9, 0x01, 0x0a, 0x11,
	0x56, 0x69, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x70,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x73, 0x70, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x6c, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c,
	0x6f, 0x75, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x22, 0x5c, 0x0a, 0x10, 0x56, 0x69, 0x70, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x94, 0x01, 0x0a, 0x10, 0x56, 0x69, 0x70, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x29, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x64, 0x0a, 0x18,
	0x56, 0x69, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x9c, 0x01, 0x0a, 0x18, 0x56, 0x69, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x70, 0x41, 0x70,
	0x70, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x21,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x4e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0x99, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x22, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5b, 0x0a,
	0x0f, 0x56, 0x69, 0x70, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xcc, 0x01, 0x0a, 0x0f, 0x56,
	0x69, 0x70, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x70, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x25, 0x0a, 0x06, 0x50, 0x61, 0x79, 0x70, 0x61, 0x6c, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x3c, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x06, 0x70, 0x61, 0x79, 0x70, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x70, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x73, 0x70, 0x2e, 0x50, 0x61, 0x79, 0x70, 0x61,
	0x6c, 0x52, 0x06, 0x70, 0x61, 0x79, 0x70, 0x61, 0x6c, 0x22, 0x5b, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xaa, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x41, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x23,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0xe2, 0x01, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x65, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x56,
	0x69, 0x70, 0x49, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69,
	0x67, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xa2, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x49, 0x4f, 0x53, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x49,
	0x4f, 0x53, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x52,
	0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x25, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f,
	0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x4d, 0x73, 0x67, 0x32, 0xaf, 0x29, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x30, 0x0a,
	0x06, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x73, 0x70, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12,
	0x57, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x11, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x11,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x73,
	0x70, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x77, 0x65, 0x62, 0x33,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x8b, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x73, 0x70, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x22, 0x24, 0x2f,
	0x77, 0x65, 0x62, 0x33, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f, 0x67, 0x65, 0x74,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x5b, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x56, 0x49, 0x50,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x49, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x49, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x77, 0x65, 0x62, 0x33, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f, 0x67, 0x65, 0x74, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x3a, 0x01, 0x2a, 0x12, 0x5c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x22, 0x21,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x77, 0x65, 0x62, 0x33, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x3a, 0x01,
	0x2a, 0x12, 0x8c, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x71, 0x1a,
	0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x73,
	0x70, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x77, 0x65, 0x62, 0x33,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x4f, 0x0a, 0x07, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x78, 0x12, 0x10, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x78, 0x52, 0x73, 0x70, 0x22,
	0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x77, 0x65, 0x62, 0x33, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x78, 0x3a, 0x01,
	0x2a, 0x12, 0x63, 0x0a, 0x0c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54,
	0x78, 0x12, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x54, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x78, 0x52, 0x73, 0x70, 0x22,
	0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x77, 0x65, 0x62, 0x33, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x54, 0x78, 0x3a, 0x01, 0x2a, 0x12, 0x67, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41,
	0x64, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x73, 0x70, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x22,
	0x1b, 0x2f, 0x77, 0x65, 0x62, 0x33, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f, 0x61,
	0x64, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x3a, 0x01, 0x2a, 0x12,
	0x7b, 0x0a, 0x12, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x41, 0x64, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41,
	0x64, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x73, 0x70, 0x22,
	0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20, 0x2f, 0x77, 0x65, 0x62, 0x33, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x3a, 0x01, 0x2a, 0x12, 0x73, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x12, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x73, 0x70, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x22, 0x1e,
	0x2f, 0x77, 0x65, 0x62, 0x33, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x3a, 0x01,
	0x2a, 0x12, 0x87, 0x01, 0x0a, 0x15, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x1e, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x73, 0x70, 0x22, 0x2e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x28, 0x22, 0x23, 0x2f, 0x77, 0x65, 0x62, 0x33, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x3a, 0x01, 0x2a, 0x12, 0x67, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x16, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x73, 0x70, 0x22, 0x26, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x20, 0x22, 0x1b, 0x2f, 0x77, 0x65, 0x62, 0x33, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x2f, 0x67, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x3a, 0x01, 0x2a, 0x12, 0x7f, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c,
	0x6c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x1c, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x73, 0x70, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x22,
	0x21, 0x2f, 0x77, 0x65, 0x62, 0x33, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x3a, 0x01, 0x2a, 0x12, 0x97, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x73, 0x70, 0x22, 0x32, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2c, 0x22, 0x27, 0x2f, 0x77, 0x65, 0x62, 0x33, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x2f, 0x67, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x3a, 0x01, 0x2a, 0x12,
	0x77, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x22, 0x2a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x24, 0x22, 0x1f, 0x2f, 0x77, 0x65, 0x62, 0x33, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x2f, 0x67, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x57, 0x0a, 0x0a, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x73, 0x70, 0x22, 0x23, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x77, 0x65, 0x62, 0x33, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x2f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x3a, 0x01,
	0x2a, 0x12, 0x6b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x73, 0x63, 0x12, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x73, 0x63, 0x52, 0x73, 0x70, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f,
	0x77, 0x65, 0x62, 0x33, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f, 0x67, 0x65, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x3a, 0x01, 0x2a, 0x12, 0x41,
	0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x3b, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x12, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3f,
	0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12,
	0x42, 0x0a, 0x0e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x64,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x16, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1f,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12,
	0x4b, 0x0a, 0x11, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x11,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x17, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x12, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x12, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0f, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12,
	0x4e, 0x0a, 0x12, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12,
	0x57, 0x0a, 0x15, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x12, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x12, 0x19, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52,
	0x73, 0x70, 0x12, 0x4b, 0x0a, 0x11, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12,
	0x4b, 0x0a, 0x11, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x12,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x12, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x14,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x73, 0x70, 0x12, 0x5d, 0x0a, 0x17, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x73,
	0x70, 0x12, 0x54, 0x0a, 0x14, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x17, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x15, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x78, 0x69, 0x74, 0x12,
	0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x78, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x78, 0x69, 0x74, 0x52, 0x73, 0x70, 0x12,
	0x5d, 0x0a, 0x17, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x5a,
	0x0a, 0x16, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x15, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x15, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x66, 0x0a, 0x1a,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x52, 0x69, 0x64, 0x12, 0x23, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x52, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x52, 0x69,
	0x64, 0x52, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x15, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x36, 0x0a,
	0x0a, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x13, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x73, 0x70, 0x12,
	0x48, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0c, 0x56, 0x69, 0x70,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x56, 0x69, 0x70, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x1a, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x70, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x13, 0x56, 0x69, 0x70, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x70, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x70, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0e, 0x56, 0x69,
	0x70, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x70, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x70,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x42,
	0x0a, 0x0e, 0x56, 0x69, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x56, 0x69, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0d, 0x56, 0x69, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x70, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x56, 0x69, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x15, 0x56, 0x69, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x1e, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x1a, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12,
	0x3c, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x57, 0x0a,
	0x13, 0x56, 0x69, 0x70, 0x49, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x69, 0x67, 0x6e, 0x12, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x69, 0x70, 0x49, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69,
	0x67, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x56, 0x69, 0x70, 0x49, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x69, 0x67, 0x6e, 0x52, 0x73, 0x70, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x61, 0x6d, 0x68, 0x65, 0x2d, 0x74, 0x65, 0x61, 0x6d,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_proto_rawDescOnce sync.Once
	file_user_proto_rawDescData = file_user_proto_rawDesc
)

func file_user_proto_rawDescGZIP() []byte {
	file_user_proto_rawDescOnce.Do(func() {
		file_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_proto_rawDescData)
	})
	return file_user_proto_rawDescData
}

var file_user_proto_msgTypes = make([]protoimpl.MessageInfo, 176)
var file_user_proto_goTypes = []interface{}{
	(*EmptyData)(nil),                              // 0: user.EmptyData
	(*StreamReq)(nil),                              // 1: user.StreamReq
	(*StreamRsp)(nil),                              // 2: user.StreamRsp
	(*RegisterReq)(nil),                            // 3: user.RegisterReq
	(*RegisterRsp)(nil),                            // 4: user.RegisterRsp
	(*GetPersonalSignAddressReq)(nil),              // 5: user.GetPersonalSignAddressReq
	(*GetPersonalSignAddressRsp)(nil),              // 6: user.GetPersonalSignAddressRsp
	(*GetVIPInfoReq)(nil),                          // 7: user.GetVIPInfoReq
	(*GetVIPInfoRsp)(nil),                          // 8: user.GetVIPInfoRsp
	(*GetUserInfoReq)(nil),                         // 9: user.GetUserInfoReq
	(*GetUserInfoRsp)(nil),                         // 10: user.GetUserInfoRsp
	(*GetLatestBlockTimestampReq)(nil),             // 11: user.GetLatestBlockTimestampReq
	(*GetLatestBlockTimestampRsp)(nil),             // 12: user.GetLatestBlockTimestampRsp
	(*CheckTxReq)(nil),                             // 13: user.CheckTxReq
	(*CheckTxRsp)(nil),                             // 14: user.CheckTxRsp
	(*BatchCheckTxReq)(nil),                        // 15: user.BatchCheckTxReq
	(*BatchCheckTxRsp)(nil),                        // 16: user.BatchCheckTxRsp
	(*AddCredentialReq)(nil),                       // 17: user.AddCredentialReq
	(*AddCredentialRsp)(nil),                       // 18: user.AddCredentialRsp
	(*BatchAddCredentialReq)(nil),                  // 19: user.BatchAddCredentialReq
	(*BatchAddCredentialRsp)(nil),                  // 20: user.BatchAddCredentialRsp
	(*DeleteCredentialReq)(nil),                    // 21: user.DeleteCredentialReq
	(*DeleteCredentialRsp)(nil),                    // 22: user.DeleteCredentialRsp
	(*BatchDeleteCredentialReq)(nil),               // 23: user.BatchDeleteCredentialReq
	(*BatchDeleteCredentialRsp)(nil),               // 24: user.BatchDeleteCredentialRsp
	(*GetCredentialReq)(nil),                       // 25: user.GetCredentialReq
	(*GetCredentialRsp)(nil),                       // 26: user.GetCredentialRsp
	(*DeleteAllCredentialReq)(nil),                 // 27: user.DeleteAllCredentialReq
	(*DeleteAllCredentialRsp)(nil),                 // 28: user.DeleteAllCredentialRsp
	(*GetAllCredentialTimestampReq)(nil),           // 29: user.GetAllCredentialTimestampReq
	(*GetAllCredentialTimestampRsp)(nil),           // 30: user.GetAllCredentialTimestampRsp
	(*GetCredentialListReq)(nil),                   // 31: user.GetCredentialListReq
	(*GetCredentialListRsp)(nil),                   // 32: user.GetCredentialListRsp
	(*GetVersionDescReq)(nil),                      // 33: user.GetVersionDescReq
	(*GetVersionDescRsp)(nil),                      // 34: user.GetVersionDescRsp
	(*StorageReportReq)(nil),                       // 35: user.StorageReportReq
	(*StorageReportRsp)(nil),                       // 36: user.StorageReportRsp
	(*StorageStatReq)(nil),                         // 37: user.StorageStatReq
	(*StorageStatRsp)(nil),                         // 38: user.StorageStatRsp
	(*AdminRegisterReq)(nil),                       // 39: user.AdminRegisterReq
	(*AdminRegisterRsp)(nil),                       // 40: user.AdminRegisterRsp
	(*AdminAuthorizationReq)(nil),                  // 41: user.AdminAuthorizationReq
	(*AdminAuthorizationRsp)(nil),                  // 42: user.AdminAuthorizationRsp
	(*AdminAddMemberReq)(nil),                      // 43: user.AdminAddMemberReq
	(*AdminAddMemberRsp)(nil),                      // 44: user.AdminAddMemberRsp
	(*AdminBatchImportMemberReq)(nil),              // 45: user.AdminBatchImportMemberReq
	(*AdminBatchImportMemberRsp)(nil),              // 46: user.AdminBatchImportMemberRsp
	(*AdminUpdateMemberReq)(nil),                   // 47: user.AdminUpdateMemberReq
	(*AdminUpdateMemberRsp)(nil),                   // 48: user.AdminUpdateMemberRsp
	(*AdminRemoveMemberReq)(nil),                   // 49: user.AdminRemoveMemberReq
	(*AdminRemoveMemberRsp)(nil),                   // 50: user.AdminRemoveMemberRsp
	(*AdminTransferSuperAdminReq)(nil),             // 51: user.AdminTransferSuperAdminReq
	(*AdminTransferSuperAdminRsp)(nil),             // 52: user.AdminTransferSuperAdminRsp
	(*AdminGetMemberListReq)(nil),                  // 53: user.AdminGetMemberListReq
	(*AdminGetMemberListRsp)(nil),                  // 54: user.AdminGetMemberListRsp
	(*AdminGetOrgInfoReq)(nil),                     // 55: user.AdminGetOrgInfoReq
	(*AdminGetOrgInfoRsp)(nil),                     // 56: user.AdminGetOrgInfoRsp
	(*AdminUpdateOrgInfoReq)(nil),                  // 57: user.AdminUpdateOrgInfoReq
	(*AdminUpdateOrgInfoRsp)(nil),                  // 58: user.AdminUpdateOrgInfoRsp
	(*AdminOperationHistoryReq)(nil),               // 59: user.AdminOperationHistoryReq
	(*AdminOperationHistoryRsp)(nil),               // 60: user.AdminOperationHistoryRsp
	(*GetAdminMnemonicReq)(nil),                    // 61: user.GetAdminMnemonicReq
	(*GetAdminMnemonicRsp)(nil),                    // 62: user.GetAdminMnemonicRsp
	(*ShareFolderCreateReq)(nil),                   // 63: user.ShareFolderCreateReq
	(*ShareFolderCreateRsp)(nil),                   // 64: user.ShareFolderCreateRsp
	(*ShareFolderUpdateReq)(nil),                   // 65: user.ShareFolderUpdateReq
	(*ShareFolderUpdateRsp)(nil),                   // 66: user.ShareFolderUpdateRsp
	(*ShareFolderDestroyReq)(nil),                  // 67: user.ShareFolderDestroyReq
	(*ShareFolderDestroyRsp)(nil),                  // 68: user.ShareFolderDestroyRsp
	(*ShareFolderAddRecordReq)(nil),                // 69: user.ShareFolderAddRecordReq
	(*ShareFolderAddRecordRsp)(nil),                // 70: user.ShareFolderAddRecordRsp
	(*ShareFolderDeleteRecordReq)(nil),             // 71: user.ShareFolderDeleteRecordReq
	(*ShareFolderDeleteRecordRsp)(nil),             // 72: user.ShareFolderDeleteRecordRsp
	(*ShareFolderAddMemberReq)(nil),                // 73: user.ShareFolderAddMemberReq
	(*ShareFolderAddMemberRsp)(nil),                // 74: user.ShareFolderAddMemberRsp
	(*ShareFolderUpdateMemberReq)(nil),             // 75: user.ShareFolderUpdateMemberReq
	(*ShareFolderUpdateMemberRsp)(nil),             // 76: user.ShareFolderUpdateMemberRsp
	(*ShareFolderMemberExitReq)(nil),               // 77: user.ShareFolderMemberExitReq
	(*ShareFolderMemberExitRsp)(nil),               // 78: user.ShareFolderMemberExitRsp
	(*ShareFolderDeleteMemberReq)(nil),             // 79: user.ShareFolderDeleteMemberReq
	(*ShareFolderDeleteMemberRsp)(nil),             // 80: user.ShareFolderDeleteMemberRsp
	(*ShareFolderFolderListReq)(nil),               // 81: user.ShareFolderFolderListReq
	(*ShareFolderFolderListRsp)(nil),               // 82: user.ShareFolderFolderListRsp
	(*ShareFolderRecordListReq)(nil),               // 83: user.ShareFolderRecordListReq
	(*ShareFolderRecordListRsp)(nil),               // 84: user.ShareFolderRecordListRsp
	(*ShareFolderRecordListByRidRsp)(nil),          // 85: user.ShareFolderRecordListByRidRsp
	(*ShareFolderRecordListByRidReq)(nil),          // 86: user.ShareFolderRecordListByRidReq
	(*ShareFolderBatchUpdateRsp)(nil),              // 87: user.ShareFolderBatchUpdateRsp
	(*ShareFolderBatchUpdateReq)(nil),              // 88: user.ShareFolderBatchUpdateReq
	(*ShareFolderMemberListReq)(nil),               // 89: user.ShareFolderMemberListReq
	(*ShareFolderMemberListRsp)(nil),               // 90: user.ShareFolderMemberListRsp
	(*FileUploadReq)(nil),                          // 91: user.FileUploadReq
	(*FileUploadRsp)(nil),                          // 92: user.FileUploadRsp
	(*FileDownloadReq)(nil),                        // 93: user.FileDownloadReq
	(*FileDownloadRsp)(nil),                        // 94: user.FileDownloadRsp
	(*FileAttachmentReq)(nil),                      // 95: user.FileAttachmentReq
	(*FileAttachmentRsp)(nil),                      // 96: user.FileAttachmentRsp
	(*FileReportReq)(nil),                          // 97: user.FileReportReq
	(*FileReportRsp)(nil),                          // 98: user.FileReportRsp
	(*GetVersionConfigReq)(nil),                    // 99: user.GetVersionConfigReq
	(*GetVersionConfigRsp)(nil),                    // 100: user.GetVersionConfigRsp
	(*VipSubscriptionListReq)(nil),                 // 101: user.VipSubscriptionListReq
	(*VipSubscriptionListRsp)(nil),                 // 102: user.VipSubscriptionListRsp
	(*VipPaymentListReq)(nil),                      // 103: user.VipPaymentListReq
	(*VipPaymentListRsp)(nil),                      // 104: user.VipPaymentListRsp
	(*PayChannelList)(nil),                         // 105: user.PayChannelList
	(*PayChannelItems)(nil),                        // 106: user.PayChannelItems
	(*PayChannelEditionItem)(nil),                  // 107: user.PayChannelEditionItem
	(*DescItem)(nil),                               // 108: user.DescItem
	(*SkuItem)(nil),                                // 109: user.SkuItem
	(*VipCreateOrderReq)(nil),                      // 110: user.VipCreateOrderReq
	(*VipCreateOrderRsp)(nil),                      // 111: user.VipCreateOrderRsp
	(*VipCheckOrderReq)(nil),                       // 112: user.VipCheckOrderReq
	(*VipCheckOrderRsp)(nil),                       // 113: user.VipCheckOrderRsp
	(*VipAppleVerifyReceiptReq)(nil),               // 114: user.VipAppleVerifyReceiptReq
	(*VipAppleVerifyReceiptRsp)(nil),               // 115: user.VipAppleVerifyReceiptRsp
	(*GetDiscountCodeInfoReq)(nil),                 // 116: user.GetDiscountCodeInfoReq
	(*GetDiscountCodeInfoRsp)(nil),                 // 117: user.GetDiscountCodeInfoRsp
	(*VipGetConfigReq)(nil),                        // 118: user.VipGetConfigReq
	(*VipGetConfigRsp)(nil),                        // 119: user.VipGetConfigRsp
	(*GetOrderListReq)(nil),                        // 120: user.GetOrderListReq
	(*GetOrderListRsp)(nil),                        // 121: user.GetOrderListRsp
	(*OrderList)(nil),                              // 122: user.OrderList
	(*GetVipIOSPromotionSignReq)(nil),              // 123: user.GetVipIOSPromotionSignReq
	(*GetVipIOSPromotionSignRsp)(nil),              // 124: user.GetVipIOSPromotionSignRsp
	(*GetPersonalSignAddressRsp_Data)(nil),         // 125: user.GetPersonalSignAddressRsp.Data
	(*GetPersonalSignAddressRsp_Sign)(nil),         // 126: user.GetPersonalSignAddressRsp.Sign
	(*GetVIPInfoRsp_Data)(nil),                     // 127: user.GetVIPInfoRsp.Data
	(*GetVIPInfoRsp_Data_List)(nil),                // 128: user.GetVIPInfoRsp.Data.List
	(*GetUserInfoRsp_Data)(nil),                    // 129: user.GetUserInfoRsp.Data
	(*GetLatestBlockTimestampRsp_Data)(nil),        // 130: user.GetLatestBlockTimestampRsp.Data
	(*CheckTxRsp_Data)(nil),                        // 131: user.CheckTxRsp.Data
	(*BatchCheckTxRsp_Data)(nil),                   // 132: user.BatchCheckTxRsp.Data
	(*BatchCheckTxRsp_Data_ListItem)(nil),          // 133: user.BatchCheckTxRsp.Data.ListItem
	(*AddCredentialRsp_Data)(nil),                  // 134: user.AddCredentialRsp.Data
	(*BatchAddCredentialRsp_Data)(nil),             // 135: user.BatchAddCredentialRsp.Data
	(*BatchAddCredentialRsp_Data_ListItem)(nil),    // 136: user.BatchAddCredentialRsp.Data.ListItem
	(*DeleteCredentialRsp_Data)(nil),               // 137: user.DeleteCredentialRsp.Data
	(*BatchDeleteCredentialRsp_Data)(nil),          // 138: user.BatchDeleteCredentialRsp.Data
	(*BatchDeleteCredentialRsp_Data_ListItem)(nil), // 139: user.BatchDeleteCredentialRsp.Data.ListItem
	(*GetCredentialRsp_Item)(nil),                  // 140: user.GetCredentialRsp.Item
	(*GetAllCredentialTimestampRsp_Item)(nil),      // 141: user.GetAllCredentialTimestampRsp.Item
	(*GetCredentialListRsp_Item)(nil),              // 142: user.GetCredentialListRsp.Item
	(*GetVersionDescRsp_Data)(nil),                 // 143: user.GetVersionDescRsp.Data
	(*StorageStatRsp_Data)(nil),                    // 144: user.StorageStatRsp.Data
	(*AdminRegisterRsp_Data)(nil),                  // 145: user.AdminRegisterRsp.Data
	(*AdminAuthorizationRsp_Data)(nil),             // 146: user.AdminAuthorizationRsp.Data
	(*AdminBatchImportMemberRsp_Data)(nil),         // 147: user.AdminBatchImportMemberRsp.Data
	(*AdminBatchImportMemberRsp_List)(nil),         // 148: user.AdminBatchImportMemberRsp.List
	(*AdminGetMemberListRsp_Data)(nil),             // 149: user.AdminGetMemberListRsp.Data
	(*AdminGetMemberListRsp_List)(nil),             // 150: user.AdminGetMemberListRsp.List
	(*AdminOperationHistoryRsp_Item)(nil),          // 151: user.AdminOperationHistoryRsp.Item
	(*GetAdminMnemonicRsp_Data)(nil),               // 152: user.GetAdminMnemonicRsp.Data
	(*ShareFolderFolderListRsp_Data)(nil),          // 153: user.ShareFolderFolderListRsp.Data
	(*ShareFolderFolderListRsp_List)(nil),          // 154: user.ShareFolderFolderListRsp.List
	(*ShareFolderRecordListRsp_Data)(nil),          // 155: user.ShareFolderRecordListRsp.Data
	(*ShareFolderRecordListRsp_List)(nil),          // 156: user.ShareFolderRecordListRsp.List
	(*ShareFolderRecordListByRidRsp_Data)(nil),     // 157: user.ShareFolderRecordListByRidRsp.Data
	(*ShareFolderRecordListByRidRsp_List)(nil),     // 158: user.ShareFolderRecordListByRidRsp.List
	(*ShareFolderMemberListRsp_Data)(nil),          // 159: user.ShareFolderMemberListRsp.Data
	(*ShareFolderMemberListRsp_List)(nil),          // 160: user.ShareFolderMemberListRsp.List
	(*FileUploadRsp_Data)(nil),                     // 161: user.FileUploadRsp.Data
	(*FileDownloadRsp_Data)(nil),                   // 162: user.FileDownloadRsp.Data
	(*FileAttachmentRsp_Data)(nil),                 // 163: user.FileAttachmentRsp.Data
	(*GetVersionConfigRsp_Data)(nil),               // 164: user.GetVersionConfigRsp.Data
	(*VipSubscriptionListRsp_Data)(nil),            // 165: user.VipSubscriptionListRsp.Data
	(*VipSubscriptionListRsp_Data_VipItem)(nil),    // 166: user.VipSubscriptionListRsp.Data.VipItem
	(*VipPaymentListRsp_Data)(nil),                 // 167: user.VipPaymentListRsp.Data
	(*VipCreateOrderRsp_Data)(nil),                 // 168: user.VipCreateOrderRsp.Data
	(*VipCheckOrderRsp_Data)(nil),                  // 169: user.VipCheckOrderRsp.Data
	(*VipAppleVerifyReceiptRsp_Data)(nil),          // 170: user.VipAppleVerifyReceiptRsp.Data
	(*GetDiscountCodeInfoRsp_Data)(nil),            // 171: user.GetDiscountCodeInfoRsp.Data
	(*VipGetConfigRsp_Paypal)(nil),                 // 172: user.VipGetConfigRsp.Paypal
	(*VipGetConfigRsp_Data)(nil),                   // 173: user.VipGetConfigRsp.Data
	(*GetOrderListRsp_Data)(nil),                   // 174: user.GetOrderListRsp.Data
	(*GetVipIOSPromotionSignRsp_Data)(nil),         // 175: user.GetVipIOSPromotionSignRsp.Data
}
var file_user_proto_depIdxs = []int32{
	0,   // 0: user.RegisterRsp.data:type_name -> user.EmptyData
	125, // 1: user.GetPersonalSignAddressRsp.data:type_name -> user.GetPersonalSignAddressRsp.Data
	127, // 2: user.GetVIPInfoRsp.data:type_name -> user.GetVIPInfoRsp.Data
	129, // 3: user.GetUserInfoRsp.data:type_name -> user.GetUserInfoRsp.Data
	130, // 4: user.GetLatestBlockTimestampRsp.data:type_name -> user.GetLatestBlockTimestampRsp.Data
	131, // 5: user.CheckTxRsp.data:type_name -> user.CheckTxRsp.Data
	132, // 6: user.BatchCheckTxRsp.data:type_name -> user.BatchCheckTxRsp.Data
	134, // 7: user.AddCredentialRsp.data:type_name -> user.AddCredentialRsp.Data
	135, // 8: user.BatchAddCredentialRsp.data:type_name -> user.BatchAddCredentialRsp.Data
	137, // 9: user.DeleteCredentialRsp.data:type_name -> user.DeleteCredentialRsp.Data
	138, // 10: user.BatchDeleteCredentialRsp.data:type_name -> user.BatchDeleteCredentialRsp.Data
	140, // 11: user.GetCredentialRsp.data:type_name -> user.GetCredentialRsp.Item
	0,   // 12: user.DeleteAllCredentialRsp.data:type_name -> user.EmptyData
	141, // 13: user.GetAllCredentialTimestampRsp.data:type_name -> user.GetAllCredentialTimestampRsp.Item
	142, // 14: user.GetCredentialListRsp.data:type_name -> user.GetCredentialListRsp.Item
	143, // 15: user.GetVersionDescRsp.data:type_name -> user.GetVersionDescRsp.Data
	0,   // 16: user.StorageReportRsp.data:type_name -> user.EmptyData
	144, // 17: user.StorageStatRsp.data:type_name -> user.StorageStatRsp.Data
	145, // 18: user.AdminRegisterRsp.data:type_name -> user.AdminRegisterRsp.Data
	146, // 19: user.AdminAuthorizationRsp.data:type_name -> user.AdminAuthorizationRsp.Data
	0,   // 20: user.AdminAddMemberRsp.data:type_name -> user.EmptyData
	147, // 21: user.AdminBatchImportMemberRsp.data:type_name -> user.AdminBatchImportMemberRsp.Data
	0,   // 22: user.AdminUpdateMemberRsp.data:type_name -> user.EmptyData
	0,   // 23: user.AdminRemoveMemberRsp.data:type_name -> user.EmptyData
	0,   // 24: user.AdminTransferSuperAdminRsp.data:type_name -> user.EmptyData
	149, // 25: user.AdminGetMemberListRsp.data:type_name -> user.AdminGetMemberListRsp.Data
	0,   // 26: user.AdminUpdateOrgInfoRsp.data:type_name -> user.EmptyData
	151, // 27: user.AdminOperationHistoryRsp.data:type_name -> user.AdminOperationHistoryRsp.Item
	152, // 28: user.GetAdminMnemonicRsp.data:type_name -> user.GetAdminMnemonicRsp.Data
	0,   // 29: user.ShareFolderCreateRsp.data:type_name -> user.EmptyData
	0,   // 30: user.ShareFolderUpdateRsp.data:type_name -> user.EmptyData
	0,   // 31: user.ShareFolderDestroyRsp.data:type_name -> user.EmptyData
	0,   // 32: user.ShareFolderAddRecordRsp.data:type_name -> user.EmptyData
	0,   // 33: user.ShareFolderDeleteRecordRsp.data:type_name -> user.EmptyData
	0,   // 34: user.ShareFolderAddMemberRsp.data:type_name -> user.EmptyData
	0,   // 35: user.ShareFolderUpdateMemberRsp.data:type_name -> user.EmptyData
	0,   // 36: user.ShareFolderMemberExitRsp.data:type_name -> user.EmptyData
	0,   // 37: user.ShareFolderDeleteMemberRsp.data:type_name -> user.EmptyData
	153, // 38: user.ShareFolderFolderListRsp.data:type_name -> user.ShareFolderFolderListRsp.Data
	155, // 39: user.ShareFolderRecordListRsp.data:type_name -> user.ShareFolderRecordListRsp.Data
	157, // 40: user.ShareFolderRecordListByRidRsp.data:type_name -> user.ShareFolderRecordListByRidRsp.Data
	0,   // 41: user.ShareFolderBatchUpdateRsp.data:type_name -> user.EmptyData
	159, // 42: user.ShareFolderMemberListRsp.data:type_name -> user.ShareFolderMemberListRsp.Data
	161, // 43: user.FileUploadRsp.data:type_name -> user.FileUploadRsp.Data
	162, // 44: user.FileDownloadRsp.data:type_name -> user.FileDownloadRsp.Data
	163, // 45: user.FileAttachmentRsp.data:type_name -> user.FileAttachmentRsp.Data
	0,   // 46: user.FileReportRsp.data:type_name -> user.EmptyData
	164, // 47: user.GetVersionConfigRsp.data:type_name -> user.GetVersionConfigRsp.Data
	165, // 48: user.VipSubscriptionListRsp.data:type_name -> user.VipSubscriptionListRsp.Data
	167, // 49: user.VipPaymentListRsp.data:type_name -> user.VipPaymentListRsp.Data
	106, // 50: user.PayChannelList.apple_pay:type_name -> user.PayChannelItems
	106, // 51: user.PayChannelList.google_pay:type_name -> user.PayChannelItems
	106, // 52: user.PayChannelList.paypal:type_name -> user.PayChannelItems
	106, // 53: user.PayChannelList.stripe:type_name -> user.PayChannelItems
	107, // 54: user.PayChannelItems.premium:type_name -> user.PayChannelEditionItem
	107, // 55: user.PayChannelItems.families:type_name -> user.PayChannelEditionItem
	107, // 56: user.PayChannelItems.teams:type_name -> user.PayChannelEditionItem
	107, // 57: user.PayChannelItems.business:type_name -> user.PayChannelEditionItem
	109, // 58: user.PayChannelEditionItem.sku_list:type_name -> user.SkuItem
	168, // 59: user.VipCreateOrderRsp.data:type_name -> user.VipCreateOrderRsp.Data
	169, // 60: user.VipCheckOrderRsp.data:type_name -> user.VipCheckOrderRsp.Data
	170, // 61: user.VipAppleVerifyReceiptRsp.data:type_name -> user.VipAppleVerifyReceiptRsp.Data
	171, // 62: user.GetDiscountCodeInfoRsp.data:type_name -> user.GetDiscountCodeInfoRsp.Data
	173, // 63: user.VipGetConfigRsp.data:type_name -> user.VipGetConfigRsp.Data
	174, // 64: user.GetOrderListRsp.data:type_name -> user.GetOrderListRsp.Data
	175, // 65: user.GetVipIOSPromotionSignRsp.data:type_name -> user.GetVipIOSPromotionSignRsp.Data
	126, // 66: user.GetPersonalSignAddressRsp.Data.signs:type_name -> user.GetPersonalSignAddressRsp.Sign
	128, // 67: user.GetVIPInfoRsp.Data.org_info:type_name -> user.GetVIPInfoRsp.Data.List
	133, // 68: user.BatchCheckTxRsp.Data.list:type_name -> user.BatchCheckTxRsp.Data.ListItem
	136, // 69: user.BatchAddCredentialRsp.Data.list:type_name -> user.BatchAddCredentialRsp.Data.ListItem
	139, // 70: user.BatchDeleteCredentialRsp.Data.list:type_name -> user.BatchDeleteCredentialRsp.Data.ListItem
	148, // 71: user.AdminBatchImportMemberRsp.Data.list:type_name -> user.AdminBatchImportMemberRsp.List
	150, // 72: user.AdminGetMemberListRsp.Data.list:type_name -> user.AdminGetMemberListRsp.List
	154, // 73: user.ShareFolderFolderListRsp.Data.list:type_name -> user.ShareFolderFolderListRsp.List
	156, // 74: user.ShareFolderRecordListRsp.Data.list:type_name -> user.ShareFolderRecordListRsp.List
	158, // 75: user.ShareFolderRecordListByRidRsp.Data.list:type_name -> user.ShareFolderRecordListByRidRsp.List
	160, // 76: user.ShareFolderMemberListRsp.Data.list:type_name -> user.ShareFolderMemberListRsp.List
	166, // 77: user.VipSubscriptionListRsp.Data.my_vip:type_name -> user.VipSubscriptionListRsp.Data.VipItem
	166, // 78: user.VipSubscriptionListRsp.Data.joined_vip:type_name -> user.VipSubscriptionListRsp.Data.VipItem
	109, // 79: user.VipPaymentListRsp.Data.sku_list:type_name -> user.SkuItem
	172, // 80: user.VipGetConfigRsp.Data.paypal:type_name -> user.VipGetConfigRsp.Paypal
	122, // 81: user.GetOrderListRsp.Data.list:type_name -> user.OrderList
	1,   // 82: user.User.Stream:input_type -> user.StreamReq
	3,   // 83: user.User.Register:input_type -> user.RegisterReq
	5,   // 84: user.User.GetPersonalSignAddress:input_type -> user.GetPersonalSignAddressReq
	7,   // 85: user.User.GetVIPInfo:input_type -> user.GetVIPInfoReq
	9,   // 86: user.User.GetUserInfo:input_type -> user.GetUserInfoReq
	11,  // 87: user.User.GetLatestBlockTimestamp:input_type -> user.GetLatestBlockTimestampReq
	13,  // 88: user.User.CheckTx:input_type -> user.CheckTxReq
	15,  // 89: user.User.BatchCheckTx:input_type -> user.BatchCheckTxReq
	17,  // 90: user.User.AddCredential:input_type -> user.AddCredentialReq
	19,  // 91: user.User.BatchAddCredential:input_type -> user.BatchAddCredentialReq
	21,  // 92: user.User.DeleteCredential:input_type -> user.DeleteCredentialReq
	23,  // 93: user.User.BatchDeleteCredential:input_type -> user.BatchDeleteCredentialReq
	25,  // 94: user.User.GetCredential:input_type -> user.GetCredentialReq
	27,  // 95: user.User.DeleteAllCredential:input_type -> user.DeleteAllCredentialReq
	29,  // 96: user.User.GetAllCredentialTimestamp:input_type -> user.GetAllCredentialTimestampReq
	31,  // 97: user.User.GetCredentialList:input_type -> user.GetCredentialListReq
	3,   // 98: user.User.Initialize:input_type -> user.RegisterReq
	33,  // 99: user.User.GetVersionDesc:input_type -> user.GetVersionDescReq
	35,  // 100: user.User.StorageReport:input_type -> user.StorageReportReq
	37,  // 101: user.User.StorageStat:input_type -> user.StorageStatReq
	39,  // 102: user.User.AdminRegister:input_type -> user.AdminRegisterReq
	43,  // 103: user.User.AdminAddMember:input_type -> user.AdminAddMemberReq
	45,  // 104: user.User.AdminBatchImportMember:input_type -> user.AdminBatchImportMemberReq
	47,  // 105: user.User.AdminUpdateMember:input_type -> user.AdminUpdateMemberReq
	49,  // 106: user.User.AdminRemoveMember:input_type -> user.AdminRemoveMemberReq
	51,  // 107: user.User.AdminTransferSuperAdmin:input_type -> user.AdminTransferSuperAdminReq
	53,  // 108: user.User.AdminGetMemberList:input_type -> user.AdminGetMemberListReq
	55,  // 109: user.User.AdminGetOrgInfo:input_type -> user.AdminGetOrgInfoReq
	57,  // 110: user.User.AdminUpdateOrgInfo:input_type -> user.AdminUpdateOrgInfoReq
	59,  // 111: user.User.AdminOperationHistory:input_type -> user.AdminOperationHistoryReq
	41,  // 112: user.User.AdminAuthorization:input_type -> user.AdminAuthorizationReq
	61,  // 113: user.User.GetAdminMnemonic:input_type -> user.GetAdminMnemonicReq
	63,  // 114: user.User.ShareFolderCreate:input_type -> user.ShareFolderCreateReq
	65,  // 115: user.User.ShareFolderUpdate:input_type -> user.ShareFolderUpdateReq
	67,  // 116: user.User.ShareFolderDestroy:input_type -> user.ShareFolderDestroyReq
	69,  // 117: user.User.ShareFolderAddRecord:input_type -> user.ShareFolderAddRecordReq
	71,  // 118: user.User.ShareFolderDeleteRecord:input_type -> user.ShareFolderDeleteRecordReq
	73,  // 119: user.User.ShareFolderAddMember:input_type -> user.ShareFolderAddMemberReq
	75,  // 120: user.User.ShareFolderUpdateMember:input_type -> user.ShareFolderUpdateMemberReq
	77,  // 121: user.User.ShareFolderMemberExit:input_type -> user.ShareFolderMemberExitReq
	79,  // 122: user.User.ShareFolderDeleteMember:input_type -> user.ShareFolderDeleteMemberReq
	88,  // 123: user.User.ShareFolderBatchUpdate:input_type -> user.ShareFolderBatchUpdateReq
	81,  // 124: user.User.ShareFolderFolderList:input_type -> user.ShareFolderFolderListReq
	83,  // 125: user.User.ShareFolderRecordList:input_type -> user.ShareFolderRecordListReq
	86,  // 126: user.User.ShareFolderRecordListByRid:input_type -> user.ShareFolderRecordListByRidReq
	89,  // 127: user.User.ShareFolderMemberList:input_type -> user.ShareFolderMemberListReq
	91,  // 128: user.User.FileUpload:input_type -> user.FileUploadReq
	93,  // 129: user.User.FileDownload:input_type -> user.FileDownloadReq
	95,  // 130: user.User.FileAttachment:input_type -> user.FileAttachmentReq
	97,  // 131: user.User.FileReport:input_type -> user.FileReportReq
	99,  // 132: user.User.GetVersionConfig:input_type -> user.GetVersionConfigReq
	118, // 133: user.User.VipGetConfig:input_type -> user.VipGetConfigReq
	101, // 134: user.User.VipSubscriptionList:input_type -> user.VipSubscriptionListReq
	103, // 135: user.User.VipPaymentList:input_type -> user.VipPaymentListReq
	110, // 136: user.User.VipCreateOrder:input_type -> user.VipCreateOrderReq
	112, // 137: user.User.VipCheckOrder:input_type -> user.VipCheckOrderReq
	114, // 138: user.User.VipAppleVerifyReceipt:input_type -> user.VipAppleVerifyReceiptReq
	116, // 139: user.User.GetDiscountCodeInfo:input_type -> user.GetDiscountCodeInfoReq
	120, // 140: user.User.GetOrderList:input_type -> user.GetOrderListReq
	123, // 141: user.User.VipIOSPromotionSign:input_type -> user.GetVipIOSPromotionSignReq
	2,   // 142: user.User.Stream:output_type -> user.StreamRsp
	4,   // 143: user.User.Register:output_type -> user.RegisterRsp
	6,   // 144: user.User.GetPersonalSignAddress:output_type -> user.GetPersonalSignAddressRsp
	8,   // 145: user.User.GetVIPInfo:output_type -> user.GetVIPInfoRsp
	10,  // 146: user.User.GetUserInfo:output_type -> user.GetUserInfoRsp
	12,  // 147: user.User.GetLatestBlockTimestamp:output_type -> user.GetLatestBlockTimestampRsp
	14,  // 148: user.User.CheckTx:output_type -> user.CheckTxRsp
	16,  // 149: user.User.BatchCheckTx:output_type -> user.BatchCheckTxRsp
	18,  // 150: user.User.AddCredential:output_type -> user.AddCredentialRsp
	20,  // 151: user.User.BatchAddCredential:output_type -> user.BatchAddCredentialRsp
	22,  // 152: user.User.DeleteCredential:output_type -> user.DeleteCredentialRsp
	24,  // 153: user.User.BatchDeleteCredential:output_type -> user.BatchDeleteCredentialRsp
	26,  // 154: user.User.GetCredential:output_type -> user.GetCredentialRsp
	28,  // 155: user.User.DeleteAllCredential:output_type -> user.DeleteAllCredentialRsp
	30,  // 156: user.User.GetAllCredentialTimestamp:output_type -> user.GetAllCredentialTimestampRsp
	32,  // 157: user.User.GetCredentialList:output_type -> user.GetCredentialListRsp
	4,   // 158: user.User.Initialize:output_type -> user.RegisterRsp
	34,  // 159: user.User.GetVersionDesc:output_type -> user.GetVersionDescRsp
	36,  // 160: user.User.StorageReport:output_type -> user.StorageReportRsp
	38,  // 161: user.User.StorageStat:output_type -> user.StorageStatRsp
	40,  // 162: user.User.AdminRegister:output_type -> user.AdminRegisterRsp
	44,  // 163: user.User.AdminAddMember:output_type -> user.AdminAddMemberRsp
	46,  // 164: user.User.AdminBatchImportMember:output_type -> user.AdminBatchImportMemberRsp
	48,  // 165: user.User.AdminUpdateMember:output_type -> user.AdminUpdateMemberRsp
	50,  // 166: user.User.AdminRemoveMember:output_type -> user.AdminRemoveMemberRsp
	52,  // 167: user.User.AdminTransferSuperAdmin:output_type -> user.AdminTransferSuperAdminRsp
	54,  // 168: user.User.AdminGetMemberList:output_type -> user.AdminGetMemberListRsp
	56,  // 169: user.User.AdminGetOrgInfo:output_type -> user.AdminGetOrgInfoRsp
	58,  // 170: user.User.AdminUpdateOrgInfo:output_type -> user.AdminUpdateOrgInfoRsp
	60,  // 171: user.User.AdminOperationHistory:output_type -> user.AdminOperationHistoryRsp
	42,  // 172: user.User.AdminAuthorization:output_type -> user.AdminAuthorizationRsp
	62,  // 173: user.User.GetAdminMnemonic:output_type -> user.GetAdminMnemonicRsp
	64,  // 174: user.User.ShareFolderCreate:output_type -> user.ShareFolderCreateRsp
	66,  // 175: user.User.ShareFolderUpdate:output_type -> user.ShareFolderUpdateRsp
	68,  // 176: user.User.ShareFolderDestroy:output_type -> user.ShareFolderDestroyRsp
	70,  // 177: user.User.ShareFolderAddRecord:output_type -> user.ShareFolderAddRecordRsp
	72,  // 178: user.User.ShareFolderDeleteRecord:output_type -> user.ShareFolderDeleteRecordRsp
	74,  // 179: user.User.ShareFolderAddMember:output_type -> user.ShareFolderAddMemberRsp
	76,  // 180: user.User.ShareFolderUpdateMember:output_type -> user.ShareFolderUpdateMemberRsp
	78,  // 181: user.User.ShareFolderMemberExit:output_type -> user.ShareFolderMemberExitRsp
	80,  // 182: user.User.ShareFolderDeleteMember:output_type -> user.ShareFolderDeleteMemberRsp
	87,  // 183: user.User.ShareFolderBatchUpdate:output_type -> user.ShareFolderBatchUpdateRsp
	82,  // 184: user.User.ShareFolderFolderList:output_type -> user.ShareFolderFolderListRsp
	84,  // 185: user.User.ShareFolderRecordList:output_type -> user.ShareFolderRecordListRsp
	85,  // 186: user.User.ShareFolderRecordListByRid:output_type -> user.ShareFolderRecordListByRidRsp
	90,  // 187: user.User.ShareFolderMemberList:output_type -> user.ShareFolderMemberListRsp
	92,  // 188: user.User.FileUpload:output_type -> user.FileUploadRsp
	94,  // 189: user.User.FileDownload:output_type -> user.FileDownloadRsp
	96,  // 190: user.User.FileAttachment:output_type -> user.FileAttachmentRsp
	98,  // 191: user.User.FileReport:output_type -> user.FileReportRsp
	100, // 192: user.User.GetVersionConfig:output_type -> user.GetVersionConfigRsp
	119, // 193: user.User.VipGetConfig:output_type -> user.VipGetConfigRsp
	102, // 194: user.User.VipSubscriptionList:output_type -> user.VipSubscriptionListRsp
	104, // 195: user.User.VipPaymentList:output_type -> user.VipPaymentListRsp
	111, // 196: user.User.VipCreateOrder:output_type -> user.VipCreateOrderRsp
	113, // 197: user.User.VipCheckOrder:output_type -> user.VipCheckOrderRsp
	115, // 198: user.User.VipAppleVerifyReceipt:output_type -> user.VipAppleVerifyReceiptRsp
	117, // 199: user.User.GetDiscountCodeInfo:output_type -> user.GetDiscountCodeInfoRsp
	121, // 200: user.User.GetOrderList:output_type -> user.GetOrderListRsp
	124, // 201: user.User.VipIOSPromotionSign:output_type -> user.GetVipIOSPromotionSignRsp
	142, // [142:202] is the sub-list for method output_type
	82,  // [82:142] is the sub-list for method input_type
	82,  // [82:82] is the sub-list for extension type_name
	82,  // [82:82] is the sub-list for extension extendee
	0,   // [0:82] is the sub-list for field type_name
}

func init() { file_user_proto_init() }
func file_user_proto_init() {
	if File_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonalSignAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonalSignAddressRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVIPInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVIPInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestBlockTimestampReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestBlockTimestampRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTxReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTxRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCheckTxReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCheckTxRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCredentialReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCredentialRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchAddCredentialReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchAddCredentialRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCredentialReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCredentialRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchDeleteCredentialReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchDeleteCredentialRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAllCredentialReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAllCredentialRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCredentialTimestampReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCredentialTimestampRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionDescReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionDescRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageReportRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageStatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageStatRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminRegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminRegisterRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminAuthorizationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminAuthorizationRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminAddMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminAddMemberRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminBatchImportMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminBatchImportMemberRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateMemberRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminRemoveMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminRemoveMemberRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminTransferSuperAdminReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminTransferSuperAdminRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetMemberListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetMemberListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetOrgInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetOrgInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateOrgInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateOrgInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminOperationHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminOperationHistoryRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminMnemonicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminMnemonicRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderCreateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderUpdateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderDestroyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderDestroyRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderAddRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderAddRecordRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderDeleteRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderDeleteRecordRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderAddMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderAddMemberRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderUpdateMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderUpdateMemberRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderMemberExitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderMemberExitRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderDeleteMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderDeleteMemberRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderFolderListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderFolderListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderRecordListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderRecordListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderRecordListByRidRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderRecordListByRidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderBatchUpdateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderBatchUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderMemberListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderMemberListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUploadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUploadRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDownloadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDownloadRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileAttachmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileAttachmentRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileReportRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionConfigRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipSubscriptionListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipSubscriptionListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipPaymentListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipPaymentListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayChannelList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayChannelItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayChannelEditionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipCreateOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipCreateOrderRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipCheckOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipCheckOrderRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipAppleVerifyReceiptReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipAppleVerifyReceiptRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscountCodeInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscountCodeInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipGetConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipGetConfigRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVipIOSPromotionSignReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVipIOSPromotionSignRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonalSignAddressRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonalSignAddressRsp_Sign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVIPInfoRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVIPInfoRsp_Data_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestBlockTimestampRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTxRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCheckTxRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCheckTxRsp_Data_ListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCredentialRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchAddCredentialRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchAddCredentialRsp_Data_ListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCredentialRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchDeleteCredentialRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchDeleteCredentialRsp_Data_ListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialRsp_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCredentialTimestampRsp_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialListRsp_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionDescRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageStatRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminRegisterRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminAuthorizationRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminBatchImportMemberRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminBatchImportMemberRsp_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetMemberListRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetMemberListRsp_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminOperationHistoryRsp_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminMnemonicRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderFolderListRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderFolderListRsp_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderRecordListRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderRecordListRsp_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderRecordListByRidRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderRecordListByRidRsp_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderMemberListRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFolderMemberListRsp_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUploadRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDownloadRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileAttachmentRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionConfigRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipSubscriptionListRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipSubscriptionListRsp_Data_VipItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipPaymentListRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipCreateOrderRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipCheckOrderRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipAppleVerifyReceiptRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscountCodeInfoRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipGetConfigRsp_Paypal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipGetConfigRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderListRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVipIOSPromotionSignRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   176,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_proto_goTypes,
		DependencyIndexes: file_user_proto_depIdxs,
		MessageInfos:      file_user_proto_msgTypes,
	}.Build()
	File_user_proto = out.File
	file_user_proto_rawDesc = nil
	file_user_proto_goTypes = nil
	file_user_proto_depIdxs = nil
}
