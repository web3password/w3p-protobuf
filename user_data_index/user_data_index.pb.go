// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: user_data_index.proto

package user_data_index

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IndexItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Credential  []byte `protobuf:"bytes,2,opt,name=credential,proto3" json:"credential,omitempty"`
	OpTimestamp int64  `protobuf:"varint,3,opt,name=op_timestamp,json=opTimestamp,proto3" json:"op_timestamp,omitempty"`
}

func (x *IndexItem) Reset() {
	*x = IndexItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexItem) ProtoMessage() {}

func (x *IndexItem) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexItem.ProtoReflect.Descriptor instead.
func (*IndexItem) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{0}
}

func (x *IndexItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IndexItem) GetCredential() []byte {
	if x != nil {
		return x.Credential
	}
	return nil
}

func (x *IndexItem) GetOpTimestamp() int64 {
	if x != nil {
		return x.OpTimestamp
	}
	return 0
}

type GetPrimaryAddrIndexListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *GetPrimaryAddrIndexListRequest) Reset() {
	*x = GetPrimaryAddrIndexListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrimaryAddrIndexListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrimaryAddrIndexListRequest) ProtoMessage() {}

func (x *GetPrimaryAddrIndexListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrimaryAddrIndexListRequest.ProtoReflect.Descriptor instead.
func (*GetPrimaryAddrIndexListRequest) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{1}
}

func (x *GetPrimaryAddrIndexListRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *GetPrimaryAddrIndexListRequest) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type GetPrimaryAddrIndexListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*IndexItem `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPrimaryAddrIndexListResponse) Reset() {
	*x = GetPrimaryAddrIndexListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrimaryAddrIndexListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrimaryAddrIndexListResponse) ProtoMessage() {}

func (x *GetPrimaryAddrIndexListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrimaryAddrIndexListResponse.ProtoReflect.Descriptor instead.
func (*GetPrimaryAddrIndexListResponse) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{2}
}

func (x *GetPrimaryAddrIndexListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPrimaryAddrIndexListResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetPrimaryAddrIndexListResponse) GetData() []*IndexItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetPrimaryAddrIndexDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *GetPrimaryAddrIndexDetailRequest) Reset() {
	*x = GetPrimaryAddrIndexDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrimaryAddrIndexDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrimaryAddrIndexDetailRequest) ProtoMessage() {}

func (x *GetPrimaryAddrIndexDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrimaryAddrIndexDetailRequest.ProtoReflect.Descriptor instead.
func (*GetPrimaryAddrIndexDetailRequest) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{3}
}

func (x *GetPrimaryAddrIndexDetailRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *GetPrimaryAddrIndexDetailRequest) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type GetPrimaryAddrIndexDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *IndexItem `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPrimaryAddrIndexDetailResponse) Reset() {
	*x = GetPrimaryAddrIndexDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrimaryAddrIndexDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrimaryAddrIndexDetailResponse) ProtoMessage() {}

func (x *GetPrimaryAddrIndexDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrimaryAddrIndexDetailResponse.ProtoReflect.Descriptor instead.
func (*GetPrimaryAddrIndexDetailResponse) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{4}
}

func (x *GetPrimaryAddrIndexDetailResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPrimaryAddrIndexDetailResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetPrimaryAddrIndexDetailResponse) GetData() *IndexItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetLatestBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *GetLatestBlockRequest) Reset() {
	*x = GetLatestBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestBlockRequest) ProtoMessage() {}

func (x *GetLatestBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestBlockRequest.ProtoReflect.Descriptor instead.
func (*GetLatestBlockRequest) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{5}
}

func (x *GetLatestBlockRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *GetLatestBlockRequest) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type LatestBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height      int64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	OpTimestamp int64 `protobuf:"varint,2,opt,name=op_timestamp,json=opTimestamp,proto3" json:"op_timestamp,omitempty"`
}

func (x *LatestBlock) Reset() {
	*x = LatestBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatestBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestBlock) ProtoMessage() {}

func (x *LatestBlock) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestBlock.ProtoReflect.Descriptor instead.
func (*LatestBlock) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{6}
}

func (x *LatestBlock) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *LatestBlock) GetOpTimestamp() int64 {
	if x != nil {
		return x.OpTimestamp
	}
	return 0
}

type GetLatestBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *LatestBlock `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetLatestBlockResponse) Reset() {
	*x = GetLatestBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestBlockResponse) ProtoMessage() {}

func (x *GetLatestBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestBlockResponse.ProtoReflect.Descriptor instead.
func (*GetLatestBlockResponse) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{7}
}

func (x *GetLatestBlockResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetLatestBlockResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetLatestBlockResponse) GetData() *LatestBlock {
	if x != nil {
		return x.Data
	}
	return nil
}

type AddOrDelCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddOrDelCredentialRequest) Reset() {
	*x = AddOrDelCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrDelCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrDelCredentialRequest) ProtoMessage() {}

func (x *AddOrDelCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrDelCredentialRequest.ProtoReflect.Descriptor instead.
func (*AddOrDelCredentialRequest) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{8}
}

func (x *AddOrDelCredentialRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *AddOrDelCredentialRequest) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *AddOrDelCredentialRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AddOrDelCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                                         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AddOrDelCredentialResponseCredentialBlockData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddOrDelCredentialResponse) Reset() {
	*x = AddOrDelCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrDelCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrDelCredentialResponse) ProtoMessage() {}

func (x *AddOrDelCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrDelCredentialResponse.ProtoReflect.Descriptor instead.
func (*AddOrDelCredentialResponse) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{9}
}

func (x *AddOrDelCredentialResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddOrDelCredentialResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddOrDelCredentialResponse) GetData() *AddOrDelCredentialResponseCredentialBlockData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchAddCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BatchAddCredentialRequest) Reset() {
	*x = BatchAddCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchAddCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddCredentialRequest) ProtoMessage() {}

func (x *BatchAddCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddCredentialRequest.ProtoReflect.Descriptor instead.
func (*BatchAddCredentialRequest) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{10}
}

func (x *BatchAddCredentialRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *BatchAddCredentialRequest) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *BatchAddCredentialRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchAddCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *BatchAddCredentialResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BatchAddCredentialResponse) Reset() {
	*x = BatchAddCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchAddCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddCredentialResponse) ProtoMessage() {}

func (x *BatchAddCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddCredentialResponse.ProtoReflect.Descriptor instead.
func (*BatchAddCredentialResponse) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{11}
}

func (x *BatchAddCredentialResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BatchAddCredentialResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BatchAddCredentialResponse) GetData() *BatchAddCredentialResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchDeleteCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BatchDeleteCredentialRequest) Reset() {
	*x = BatchDeleteCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchDeleteCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteCredentialRequest) ProtoMessage() {}

func (x *BatchDeleteCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteCredentialRequest.ProtoReflect.Descriptor instead.
func (*BatchDeleteCredentialRequest) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{12}
}

func (x *BatchDeleteCredentialRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *BatchDeleteCredentialRequest) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *BatchDeleteCredentialRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchDeleteCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *BatchDeleteCredentialResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BatchDeleteCredentialResponse) Reset() {
	*x = BatchDeleteCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchDeleteCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteCredentialResponse) ProtoMessage() {}

func (x *BatchDeleteCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteCredentialResponse.ProtoReflect.Descriptor instead.
func (*BatchDeleteCredentialResponse) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{13}
}

func (x *BatchDeleteCredentialResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BatchDeleteCredentialResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BatchDeleteCredentialResponse) GetData() *BatchDeleteCredentialResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type DelPrimaryAddrIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *DelPrimaryAddrIndexRequest) Reset() {
	*x = DelPrimaryAddrIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelPrimaryAddrIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelPrimaryAddrIndexRequest) ProtoMessage() {}

func (x *DelPrimaryAddrIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelPrimaryAddrIndexRequest.ProtoReflect.Descriptor instead.
func (*DelPrimaryAddrIndexRequest) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{14}
}

func (x *DelPrimaryAddrIndexRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *DelPrimaryAddrIndexRequest) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type DelPrimaryAddrIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *DelPrimaryAddrIndexResponse) Reset() {
	*x = DelPrimaryAddrIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelPrimaryAddrIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelPrimaryAddrIndexResponse) ProtoMessage() {}

func (x *DelPrimaryAddrIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelPrimaryAddrIndexResponse.ProtoReflect.Descriptor instead.
func (*DelPrimaryAddrIndexResponse) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{15}
}

func (x *DelPrimaryAddrIndexResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DelPrimaryAddrIndexResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetAllCredentialTimestampRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *GetAllCredentialTimestampRequest) Reset() {
	*x = GetAllCredentialTimestampRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCredentialTimestampRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCredentialTimestampRequest) ProtoMessage() {}

func (x *GetAllCredentialTimestampRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCredentialTimestampRequest.ProtoReflect.Descriptor instead.
func (*GetAllCredentialTimestampRequest) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{16}
}

func (x *GetAllCredentialTimestampRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *GetAllCredentialTimestampRequest) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type GetAllCredentialTimestampResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*AddrIdTimestampList `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAllCredentialTimestampResponse) Reset() {
	*x = GetAllCredentialTimestampResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCredentialTimestampResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCredentialTimestampResponse) ProtoMessage() {}

func (x *GetAllCredentialTimestampResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCredentialTimestampResponse.ProtoReflect.Descriptor instead.
func (*GetAllCredentialTimestampResponse) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{17}
}

func (x *GetAllCredentialTimestampResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAllCredentialTimestampResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetAllCredentialTimestampResponse) GetData() []*AddrIdTimestampList {
	if x != nil {
		return x.Data
	}
	return nil
}

type AddrIdTimestampList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OpTimestamp int64  `protobuf:"varint,2,opt,name=op_timestamp,json=opTimestamp,proto3" json:"op_timestamp,omitempty"`
}

func (x *AddrIdTimestampList) Reset() {
	*x = AddrIdTimestampList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddrIdTimestampList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddrIdTimestampList) ProtoMessage() {}

func (x *AddrIdTimestampList) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddrIdTimestampList.ProtoReflect.Descriptor instead.
func (*AddrIdTimestampList) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{18}
}

func (x *AddrIdTimestampList) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddrIdTimestampList) GetOpTimestamp() int64 {
	if x != nil {
		return x.OpTimestamp
	}
	return 0
}

type GetCredentialListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *GetCredentialListRequest) Reset() {
	*x = GetCredentialListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialListRequest) ProtoMessage() {}

func (x *GetCredentialListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialListRequest.ProtoReflect.Descriptor instead.
func (*GetCredentialListRequest) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{19}
}

func (x *GetCredentialListRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *GetCredentialListRequest) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type GetCredentialListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*CredentialListTimestamp `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCredentialListResponse) Reset() {
	*x = GetCredentialListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialListResponse) ProtoMessage() {}

func (x *GetCredentialListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialListResponse.ProtoReflect.Descriptor instead.
func (*GetCredentialListResponse) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{20}
}

func (x *GetCredentialListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCredentialListResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetCredentialListResponse) GetData() []*CredentialListTimestamp {
	if x != nil {
		return x.Data
	}
	return nil
}

type CredentialListTimestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Credential  string `protobuf:"bytes,2,opt,name=credential,proto3" json:"credential,omitempty"`
	OpTimestamp int64  `protobuf:"varint,3,opt,name=op_timestamp,json=opTimestamp,proto3" json:"op_timestamp,omitempty"`
}

func (x *CredentialListTimestamp) Reset() {
	*x = CredentialListTimestamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CredentialListTimestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialListTimestamp) ProtoMessage() {}

func (x *CredentialListTimestamp) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialListTimestamp.ProtoReflect.Descriptor instead.
func (*CredentialListTimestamp) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{21}
}

func (x *CredentialListTimestamp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CredentialListTimestamp) GetCredential() string {
	if x != nil {
		return x.Credential
	}
	return ""
}

func (x *CredentialListTimestamp) GetOpTimestamp() int64 {
	if x != nil {
		return x.OpTimestamp
	}
	return 0
}

type CheckTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *CheckTxRequest) Reset() {
	*x = CheckTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTxRequest) ProtoMessage() {}

func (x *CheckTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTxRequest.ProtoReflect.Descriptor instead.
func (*CheckTxRequest) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{22}
}

func (x *CheckTxRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *CheckTxRequest) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type CheckTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *CheckTxResponseData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CheckTxResponse) Reset() {
	*x = CheckTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTxResponse) ProtoMessage() {}

func (x *CheckTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTxResponse.ProtoReflect.Descriptor instead.
func (*CheckTxResponse) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{23}
}

func (x *CheckTxResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CheckTxResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CheckTxResponse) GetData() *CheckTxResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CheckTxResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height int64  `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Hash   string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *CheckTxResponseData) Reset() {
	*x = CheckTxResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTxResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTxResponseData) ProtoMessage() {}

func (x *CheckTxResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTxResponseData.ProtoReflect.Descriptor instead.
func (*CheckTxResponseData) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{24}
}

func (x *CheckTxResponseData) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *CheckTxResponseData) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type BatchCheckTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BatchCheckTxRequest) Reset() {
	*x = BatchCheckTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCheckTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckTxRequest) ProtoMessage() {}

func (x *BatchCheckTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckTxRequest.ProtoReflect.Descriptor instead.
func (*BatchCheckTxRequest) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{25}
}

func (x *BatchCheckTxRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *BatchCheckTxRequest) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *BatchCheckTxRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchCheckTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *BatchCheckTxResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BatchCheckTxResponse) Reset() {
	*x = BatchCheckTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCheckTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckTxResponse) ProtoMessage() {}

func (x *BatchCheckTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckTxResponse.ProtoReflect.Descriptor instead.
func (*BatchCheckTxResponse) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{26}
}

func (x *BatchCheckTxResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BatchCheckTxResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BatchCheckTxResponse) GetData() *BatchCheckTxResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type AddOrDelCredentialResponseCredentialBlockData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txhash string `protobuf:"bytes,1,opt,name=txhash,proto3" json:"txhash,omitempty"`
}

func (x *AddOrDelCredentialResponseCredentialBlockData) Reset() {
	*x = AddOrDelCredentialResponseCredentialBlockData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrDelCredentialResponseCredentialBlockData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrDelCredentialResponseCredentialBlockData) ProtoMessage() {}

func (x *AddOrDelCredentialResponseCredentialBlockData) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrDelCredentialResponseCredentialBlockData.ProtoReflect.Descriptor instead.
func (*AddOrDelCredentialResponseCredentialBlockData) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{9, 0}
}

func (x *AddOrDelCredentialResponseCredentialBlockData) GetTxhash() string {
	if x != nil {
		return x.Txhash
	}
	return ""
}

type BatchAddCredentialResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*BatchAddCredentialResponse_Data_ListItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *BatchAddCredentialResponse_Data) Reset() {
	*x = BatchAddCredentialResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchAddCredentialResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddCredentialResponse_Data) ProtoMessage() {}

func (x *BatchAddCredentialResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddCredentialResponse_Data.ProtoReflect.Descriptor instead.
func (*BatchAddCredentialResponse_Data) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{11, 0}
}

func (x *BatchAddCredentialResponse_Data) GetList() []*BatchAddCredentialResponse_Data_ListItem {
	if x != nil {
		return x.List
	}
	return nil
}

type BatchAddCredentialResponse_Data_ListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Hash string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *BatchAddCredentialResponse_Data_ListItem) Reset() {
	*x = BatchAddCredentialResponse_Data_ListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchAddCredentialResponse_Data_ListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddCredentialResponse_Data_ListItem) ProtoMessage() {}

func (x *BatchAddCredentialResponse_Data_ListItem) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddCredentialResponse_Data_ListItem.ProtoReflect.Descriptor instead.
func (*BatchAddCredentialResponse_Data_ListItem) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{11, 0, 0}
}

func (x *BatchAddCredentialResponse_Data_ListItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BatchAddCredentialResponse_Data_ListItem) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type BatchDeleteCredentialResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*BatchDeleteCredentialResponse_Data_ListItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *BatchDeleteCredentialResponse_Data) Reset() {
	*x = BatchDeleteCredentialResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchDeleteCredentialResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteCredentialResponse_Data) ProtoMessage() {}

func (x *BatchDeleteCredentialResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteCredentialResponse_Data.ProtoReflect.Descriptor instead.
func (*BatchDeleteCredentialResponse_Data) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{13, 0}
}

func (x *BatchDeleteCredentialResponse_Data) GetList() []*BatchDeleteCredentialResponse_Data_ListItem {
	if x != nil {
		return x.List
	}
	return nil
}

type BatchDeleteCredentialResponse_Data_ListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Hash string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *BatchDeleteCredentialResponse_Data_ListItem) Reset() {
	*x = BatchDeleteCredentialResponse_Data_ListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchDeleteCredentialResponse_Data_ListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteCredentialResponse_Data_ListItem) ProtoMessage() {}

func (x *BatchDeleteCredentialResponse_Data_ListItem) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteCredentialResponse_Data_ListItem.ProtoReflect.Descriptor instead.
func (*BatchDeleteCredentialResponse_Data_ListItem) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{13, 0, 0}
}

func (x *BatchDeleteCredentialResponse_Data_ListItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BatchDeleteCredentialResponse_Data_ListItem) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type BatchCheckTxResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*BatchCheckTxResponse_Data_ListItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *BatchCheckTxResponse_Data) Reset() {
	*x = BatchCheckTxResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCheckTxResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckTxResponse_Data) ProtoMessage() {}

func (x *BatchCheckTxResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckTxResponse_Data.ProtoReflect.Descriptor instead.
func (*BatchCheckTxResponse_Data) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{26, 0}
}

func (x *BatchCheckTxResponse_Data) GetList() []*BatchCheckTxResponse_Data_ListItem {
	if x != nil {
		return x.List
	}
	return nil
}

type BatchCheckTxResponse_Data_ListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash    string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Success int32  `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *BatchCheckTxResponse_Data_ListItem) Reset() {
	*x = BatchCheckTxResponse_Data_ListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_data_index_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCheckTxResponse_Data_ListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckTxResponse_Data_ListItem) ProtoMessage() {}

func (x *BatchCheckTxResponse_Data_ListItem) ProtoReflect() protoreflect.Message {
	mi := &file_user_data_index_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckTxResponse_Data_ListItem.ProtoReflect.Descriptor instead.
func (*BatchCheckTxResponse_Data_ListItem) Descriptor() ([]byte, []int) {
	return file_user_data_index_proto_rawDescGZIP(), []int{26, 0, 0}
}

func (x *BatchCheckTxResponse_Data_ListItem) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *BatchCheckTxResponse_Data_ListItem) GetSuccess() int32 {
	if x != nil {
		return x.Success
	}
	return 0
}

var File_user_data_index_proto protoreflect.FileDescriptor

var file_user_data_index_proto_rawDesc = []byte{
	0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x5e, 0x0a, 0x09, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x70, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x56, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x22, 0x77, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x64,
	0x64, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x58, 0x0a, 0x20, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x22, 0x79, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4d,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x48, 0x0a,
	0x0b, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x70, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x70, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x65, 0x0a, 0x19, 0x41, 0x64, 0x64,
	0x4f, 0x72, 0x44, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xc6, 0x01, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x44, 0x65, 0x6c, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x53, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x44, 0x65, 0x6c, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x2d, 0x0a, 0x13, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x78, 0x68, 0x61, 0x73, 0x68, 0x22, 0x65, 0x0a, 0x19, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x41, 0x64, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x90, 0x02, 0x0a, 0x1a, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x44, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x85, 0x01, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x4d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x39, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x1a, 0x2e, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x22, 0x68, 0x0a, 0x1c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x99, 0x02,
	0x0a, 0x1d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x47, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x88,
	0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x50, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x2e, 0x0a, 0x08, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x52, 0x0a, 0x1a, 0x44, 0x65, 0x6c,
	0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x43, 0x0a,
	0x1b, 0x44, 0x65, 0x6c, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x58, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x83, 0x01, 0x0a,
	0x21, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x49, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x48, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x72, 0x49, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x50, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x7f,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x6c, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x46, 0x0a,
	0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x71, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x38,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x41, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x5f, 0x0a, 0x13, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x88, 0x02, 0x0a,
	0x14, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3e, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x89, 0x01, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x38, 0x0a,
	0x08, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xd9, 0x09, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x7c, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x26,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6d, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x44, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x2a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x44, 0x65, 0x6c,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x44, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d,
	0x0a, 0x12, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x12, 0x2a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a,
	0x15, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x2d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x50, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2b, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x44,
	0x65, 0x6c, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x44, 0x65, 0x6c, 0x50,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x29, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x07, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x54, 0x78, 0x12, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x78, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x54, 0x78, 0x12, 0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x73, 0x74, 0x61, 0x6d, 0x68, 0x65, 0x2d, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_data_index_proto_rawDescOnce sync.Once
	file_user_data_index_proto_rawDescData = file_user_data_index_proto_rawDesc
)

func file_user_data_index_proto_rawDescGZIP() []byte {
	file_user_data_index_proto_rawDescOnce.Do(func() {
		file_user_data_index_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_data_index_proto_rawDescData)
	})
	return file_user_data_index_proto_rawDescData
}

var file_user_data_index_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_user_data_index_proto_goTypes = []interface{}{
	(*IndexItem)(nil),                                     // 0: user_data_index.IndexItem
	(*GetPrimaryAddrIndexListRequest)(nil),                // 1: user_data_index.GetPrimaryAddrIndexListRequest
	(*GetPrimaryAddrIndexListResponse)(nil),               // 2: user_data_index.GetPrimaryAddrIndexListResponse
	(*GetPrimaryAddrIndexDetailRequest)(nil),              // 3: user_data_index.GetPrimaryAddrIndexDetailRequest
	(*GetPrimaryAddrIndexDetailResponse)(nil),             // 4: user_data_index.GetPrimaryAddrIndexDetailResponse
	(*GetLatestBlockRequest)(nil),                         // 5: user_data_index.GetLatestBlockRequest
	(*LatestBlock)(nil),                                   // 6: user_data_index.LatestBlock
	(*GetLatestBlockResponse)(nil),                        // 7: user_data_index.GetLatestBlockResponse
	(*AddOrDelCredentialRequest)(nil),                     // 8: user_data_index.AddOrDelCredentialRequest
	(*AddOrDelCredentialResponse)(nil),                    // 9: user_data_index.AddOrDelCredentialResponse
	(*BatchAddCredentialRequest)(nil),                     // 10: user_data_index.BatchAddCredentialRequest
	(*BatchAddCredentialResponse)(nil),                    // 11: user_data_index.BatchAddCredentialResponse
	(*BatchDeleteCredentialRequest)(nil),                  // 12: user_data_index.BatchDeleteCredentialRequest
	(*BatchDeleteCredentialResponse)(nil),                 // 13: user_data_index.BatchDeleteCredentialResponse
	(*DelPrimaryAddrIndexRequest)(nil),                    // 14: user_data_index.DelPrimaryAddrIndexRequest
	(*DelPrimaryAddrIndexResponse)(nil),                   // 15: user_data_index.DelPrimaryAddrIndexResponse
	(*GetAllCredentialTimestampRequest)(nil),              // 16: user_data_index.GetAllCredentialTimestampRequest
	(*GetAllCredentialTimestampResponse)(nil),             // 17: user_data_index.GetAllCredentialTimestampResponse
	(*AddrIdTimestampList)(nil),                           // 18: user_data_index.AddrIdTimestampList
	(*GetCredentialListRequest)(nil),                      // 19: user_data_index.GetCredentialListRequest
	(*GetCredentialListResponse)(nil),                     // 20: user_data_index.GetCredentialListResponse
	(*CredentialListTimestamp)(nil),                       // 21: user_data_index.CredentialListTimestamp
	(*CheckTxRequest)(nil),                                // 22: user_data_index.CheckTxRequest
	(*CheckTxResponse)(nil),                               // 23: user_data_index.CheckTxResponse
	(*CheckTxResponseData)(nil),                           // 24: user_data_index.CheckTxResponseData
	(*BatchCheckTxRequest)(nil),                           // 25: user_data_index.BatchCheckTxRequest
	(*BatchCheckTxResponse)(nil),                          // 26: user_data_index.BatchCheckTxResponse
	(*AddOrDelCredentialResponseCredentialBlockData)(nil), // 27: user_data_index.AddOrDelCredentialResponse.credentialBlockData
	(*BatchAddCredentialResponse_Data)(nil),               // 28: user_data_index.BatchAddCredentialResponse.Data
	(*BatchAddCredentialResponse_Data_ListItem)(nil),      // 29: user_data_index.BatchAddCredentialResponse.Data.ListItem
	(*BatchDeleteCredentialResponse_Data)(nil),            // 30: user_data_index.BatchDeleteCredentialResponse.Data
	(*BatchDeleteCredentialResponse_Data_ListItem)(nil),   // 31: user_data_index.BatchDeleteCredentialResponse.Data.ListItem
	(*BatchCheckTxResponse_Data)(nil),                     // 32: user_data_index.BatchCheckTxResponse.Data
	(*BatchCheckTxResponse_Data_ListItem)(nil),            // 33: user_data_index.BatchCheckTxResponse.Data.ListItem
}
var file_user_data_index_proto_depIdxs = []int32{
	0,  // 0: user_data_index.GetPrimaryAddrIndexListResponse.data:type_name -> user_data_index.IndexItem
	0,  // 1: user_data_index.GetPrimaryAddrIndexDetailResponse.data:type_name -> user_data_index.IndexItem
	6,  // 2: user_data_index.GetLatestBlockResponse.data:type_name -> user_data_index.LatestBlock
	27, // 3: user_data_index.AddOrDelCredentialResponse.data:type_name -> user_data_index.AddOrDelCredentialResponse.credentialBlockData
	28, // 4: user_data_index.BatchAddCredentialResponse.data:type_name -> user_data_index.BatchAddCredentialResponse.Data
	30, // 5: user_data_index.BatchDeleteCredentialResponse.data:type_name -> user_data_index.BatchDeleteCredentialResponse.Data
	18, // 6: user_data_index.GetAllCredentialTimestampResponse.data:type_name -> user_data_index.AddrIdTimestampList
	21, // 7: user_data_index.GetCredentialListResponse.data:type_name -> user_data_index.CredentialListTimestamp
	24, // 8: user_data_index.CheckTxResponse.data:type_name -> user_data_index.CheckTxResponseData
	32, // 9: user_data_index.BatchCheckTxResponse.data:type_name -> user_data_index.BatchCheckTxResponse.Data
	29, // 10: user_data_index.BatchAddCredentialResponse.Data.list:type_name -> user_data_index.BatchAddCredentialResponse.Data.ListItem
	31, // 11: user_data_index.BatchDeleteCredentialResponse.Data.list:type_name -> user_data_index.BatchDeleteCredentialResponse.Data.ListItem
	33, // 12: user_data_index.BatchCheckTxResponse.Data.list:type_name -> user_data_index.BatchCheckTxResponse.Data.ListItem
	1,  // 13: user_data_index.UserDataIndex.GetPrimaryAddrIndexList:input_type -> user_data_index.GetPrimaryAddrIndexListRequest
	3,  // 14: user_data_index.UserDataIndex.GetPrimaryAddrIndexDetail:input_type -> user_data_index.GetPrimaryAddrIndexDetailRequest
	5,  // 15: user_data_index.UserDataIndex.GetLatestBlock:input_type -> user_data_index.GetLatestBlockRequest
	8,  // 16: user_data_index.UserDataIndex.AddOrDelCredential:input_type -> user_data_index.AddOrDelCredentialRequest
	10, // 17: user_data_index.UserDataIndex.BatchAddCredential:input_type -> user_data_index.BatchAddCredentialRequest
	12, // 18: user_data_index.UserDataIndex.BatchDeleteCredential:input_type -> user_data_index.BatchDeleteCredentialRequest
	14, // 19: user_data_index.UserDataIndex.DelPrimaryAddrIndex:input_type -> user_data_index.DelPrimaryAddrIndexRequest
	16, // 20: user_data_index.UserDataIndex.GetAllCredentialTimestamp:input_type -> user_data_index.GetAllCredentialTimestampRequest
	19, // 21: user_data_index.UserDataIndex.GetCredentialList:input_type -> user_data_index.GetCredentialListRequest
	22, // 22: user_data_index.UserDataIndex.CheckTx:input_type -> user_data_index.CheckTxRequest
	25, // 23: user_data_index.UserDataIndex.BatchCheckTx:input_type -> user_data_index.BatchCheckTxRequest
	2,  // 24: user_data_index.UserDataIndex.GetPrimaryAddrIndexList:output_type -> user_data_index.GetPrimaryAddrIndexListResponse
	4,  // 25: user_data_index.UserDataIndex.GetPrimaryAddrIndexDetail:output_type -> user_data_index.GetPrimaryAddrIndexDetailResponse
	7,  // 26: user_data_index.UserDataIndex.GetLatestBlock:output_type -> user_data_index.GetLatestBlockResponse
	9,  // 27: user_data_index.UserDataIndex.AddOrDelCredential:output_type -> user_data_index.AddOrDelCredentialResponse
	11, // 28: user_data_index.UserDataIndex.BatchAddCredential:output_type -> user_data_index.BatchAddCredentialResponse
	13, // 29: user_data_index.UserDataIndex.BatchDeleteCredential:output_type -> user_data_index.BatchDeleteCredentialResponse
	15, // 30: user_data_index.UserDataIndex.DelPrimaryAddrIndex:output_type -> user_data_index.DelPrimaryAddrIndexResponse
	17, // 31: user_data_index.UserDataIndex.GetAllCredentialTimestamp:output_type -> user_data_index.GetAllCredentialTimestampResponse
	20, // 32: user_data_index.UserDataIndex.GetCredentialList:output_type -> user_data_index.GetCredentialListResponse
	23, // 33: user_data_index.UserDataIndex.CheckTx:output_type -> user_data_index.CheckTxResponse
	26, // 34: user_data_index.UserDataIndex.BatchCheckTx:output_type -> user_data_index.BatchCheckTxResponse
	24, // [24:35] is the sub-list for method output_type
	13, // [13:24] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_user_data_index_proto_init() }
func file_user_data_index_proto_init() {
	if File_user_data_index_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_data_index_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrimaryAddrIndexListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrimaryAddrIndexListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrimaryAddrIndexDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrimaryAddrIndexDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatestBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrDelCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrDelCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchAddCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchAddCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchDeleteCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchDeleteCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelPrimaryAddrIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelPrimaryAddrIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCredentialTimestampRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCredentialTimestampResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddrIdTimestampList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CredentialListTimestamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTxResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCheckTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCheckTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrDelCredentialResponseCredentialBlockData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchAddCredentialResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchAddCredentialResponse_Data_ListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchDeleteCredentialResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchDeleteCredentialResponse_Data_ListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCheckTxResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_data_index_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCheckTxResponse_Data_ListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_data_index_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_data_index_proto_goTypes,
		DependencyIndexes: file_user_data_index_proto_depIdxs,
		MessageInfos:      file_user_data_index_proto_msgTypes,
	}.Build()
	File_user_data_index_proto = out.File
	file_user_data_index_proto_rawDesc = nil
	file_user_data_index_proto_goTypes = nil
	file_user_data_index_proto_depIdxs = nil
}
